

//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System;
using System.Data.Entity;
using System.Data.Entity.Infrastructure;
using System.Data.Entity.Core.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;


public partial class vt_EMSEntities : DbContext
{
    public vt_EMSEntities()
        : base("name=vt_EMSEntities")
    {

    }

    protected override void OnModelCreating(DbModelBuilder modelBuilder)
    {
        throw new UnintentionalCodeFirstException();
    }


    public DbSet<tbl_Graduity> tbl_Graduity { get; set; }

    public DbSet<EmployeeCharacter> EmployeeCharacters { get; set; }

    public DbSet<EmployeeFineCharge> EmployeeFineCharges { get; set; }

    public DbSet<tbl_TempAttendance> tbl_TempAttendance { get; set; }

    public DbSet<tbl_TypeOfEmployee> tbl_TypeOfEmployee { get; set; }

    public DbSet<TBLLINKVERIFICATION> TBLLINKVERIFICATIONs { get; set; }

    public DbSet<TBLSYSALLOWEDIP> TBLSYSALLOWEDIPS { get; set; }

    public DbSet<TBLUSERAUTHENTICATION> TBLUSERAUTHENTICATIONs { get; set; }

    public DbSet<TestTbl> TestTbls { get; set; }

    public DbSet<vt_tbl_AssetAssignParent> vt_tbl_AssetAssignParent { get; set; }

    public DbSet<vt_tbl_AssetMapping> vt_tbl_AssetMapping { get; set; }

    public DbSet<vt_tbl_Assets> vt_tbl_Assets { get; set; }

    public DbSet<vt_tbl_AttendaceDay> vt_tbl_AttendaceDay { get; set; }

    public DbSet<vt_tbl_Attendance> vt_tbl_Attendance { get; set; }

    public DbSet<vt_tbl_Bank> vt_tbl_Bank { get; set; }

    public DbSet<vt_tbl_Bonus> vt_tbl_Bonus { get; set; }

    public DbSet<vt_tbl_BonusRecord> vt_tbl_BonusRecord { get; set; }

    public DbSet<vt_tbl_Branch> vt_tbl_Branch { get; set; }

    public DbSet<vt_tbl_BranchWiseAttendance> vt_tbl_BranchWiseAttendance { get; set; }

    public DbSet<vt_tbl_Category> vt_tbl_Category { get; set; }

    public DbSet<vt_tbl_COFFApplication> vt_tbl_COFFApplication { get; set; }

    public DbSet<vt_tbl_COFFApplicationDate> vt_tbl_COFFApplicationDate { get; set; }

    public DbSet<vt_tbl_Company> vt_tbl_Company { get; set; }

    public DbSet<vt_tbl_CompanyLogo> vt_tbl_CompanyLogo { get; set; }

    public DbSet<vt_tbl_CompanyMonthlySalary> vt_tbl_CompanyMonthlySalary { get; set; }

    public DbSet<vt_tbl_CompanyStaffPF> vt_tbl_CompanyStaffPF { get; set; }

    public DbSet<Vt_Tbl_CoreManagement> Vt_Tbl_CoreManagement { get; set; }

    public DbSet<vt_tbl_Department> vt_tbl_Department { get; set; }

    public DbSet<vt_tbl_Device> vt_tbl_Device { get; set; }

    public DbSet<vt_tbl_DeviceUser> vt_tbl_DeviceUser { get; set; }

    public DbSet<vt_tbl_EligibilityYears> vt_tbl_EligibilityYears { get; set; }

    public DbSet<vt_tbl_EmailAuthentication> vt_tbl_EmailAuthentication { get; set; }

    public DbSet<vt_tbl_EmailSettings> vt_tbl_EmailSettings { get; set; }

    public DbSet<vt_tbl_EmpAttendance> vt_tbl_EmpAttendance { get; set; }

    public DbSet<vt_tbl_Employee> vt_tbl_Employee { get; set; }

    public DbSet<vt_tbl_Employee_Change_DesignationLog> vt_tbl_Employee_Change_DesignationLog { get; set; }

    public DbSet<Vt_Tbl_Employee_PromotionLog> Vt_Tbl_Employee_PromotionLog { get; set; }

    public DbSet<vt_tbl_Employee_PromotionNewLog> vt_tbl_Employee_PromotionNewLog { get; set; }

    public DbSet<vt_tbl_Employee_TransferLog> vt_tbl_Employee_TransferLog { get; set; }

    public DbSet<vt_tbl_Employee_TransferLogRecord> vt_tbl_Employee_TransferLogRecord { get; set; }

    public DbSet<vt_tbl_EmployeeAdvSalary> vt_tbl_EmployeeAdvSalary { get; set; }

    public DbSet<vt_tbl_EmployeeAssets> vt_tbl_EmployeeAssets { get; set; }

    public DbSet<vt_tbl_EmployeeCOFFBalance> vt_tbl_EmployeeCOFFBalance { get; set; }

    public DbSet<vt_tbl_EmployeeCOFFDetails> vt_tbl_EmployeeCOFFDetails { get; set; }

    public DbSet<vt_tbl_EmployeeGrossSalary> vt_tbl_EmployeeGrossSalary { get; set; }

    public DbSet<vt_tbl_EmployeeLeaveDetails> vt_tbl_EmployeeLeaveDetails { get; set; }

    public DbSet<vt_tbl_EmployeePhoto> vt_tbl_EmployeePhoto { get; set; }

    public DbSet<vt_tbl_EmployeeSalaryRate> vt_tbl_EmployeeSalaryRate { get; set; }

    public DbSet<vt_tbl_EndOfServices> vt_tbl_EndOfServices { get; set; }

    public DbSet<vt_tbl_ESICDeActiveEmployee> vt_tbl_ESICDeActiveEmployee { get; set; }

    public DbSet<vt_tbl_ESICMonthlyReturns> vt_tbl_ESICMonthlyReturns { get; set; }

    public DbSet<vt_tbl_ESICSettings> vt_tbl_ESICSettings { get; set; }

    public DbSet<vt_tbl_ExcelTest> vt_tbl_ExcelTest { get; set; }

    public DbSet<vt_tbl_GatePassEntry> vt_tbl_GatePassEntry { get; set; }

    public DbSet<vt_tbl_Gratuity> vt_tbl_Gratuity { get; set; }

    public DbSet<vt_tbl_HeadDepartment> vt_tbl_HeadDepartment { get; set; }

    public DbSet<vt_tbl_Holiday> vt_tbl_Holiday { get; set; }

    public DbSet<vt_tbl_HolidayDates> vt_tbl_HolidayDates { get; set; }

    public DbSet<Vt_Tbl_HolidaySchedule> Vt_Tbl_HolidaySchedule { get; set; }

    public DbSet<Vt_Tbl_HolidaysDates> Vt_Tbl_HolidaysDates { get; set; }

    public DbSet<vt_tbl_IsnotLoanDecution> vt_tbl_IsnotLoanDecution { get; set; }

    public DbSet<vt_tbl_Leave> vt_tbl_Leave { get; set; }

    public DbSet<vt_tbl_LeaveApplication> vt_tbl_LeaveApplication { get; set; }

    public DbSet<vt_tbl_LeaveApplicationDates> vt_tbl_LeaveApplicationDates { get; set; }

    public DbSet<vt_tbl_LeaveRecords> vt_tbl_LeaveRecords { get; set; }

    public DbSet<vt_tbl_LeaveYear> vt_tbl_LeaveYear { get; set; }

    public DbSet<vt_tbl_Licence> vt_tbl_Licence { get; set; }

    public DbSet<vt_tbl_Loan> vt_tbl_Loan { get; set; }

    public DbSet<vt_tbl_LoanEntry> vt_tbl_LoanEntry { get; set; }

    public DbSet<vt_tbl_LoanEntryLog> vt_tbl_LoanEntryLog { get; set; }

    public DbSet<vt_tbl_LoanMonthAmount> vt_tbl_LoanMonthAmount { get; set; }

    public DbSet<vt_tbl_Logs> vt_tbl_Logs { get; set; }

    public DbSet<vt_tbl_ManualAttendance> vt_tbl_ManualAttendance { get; set; }

    public DbSet<vt_tbl_Menu> vt_tbl_Menu { get; set; }

    public DbSet<vt_tbl_Module> vt_tbl_Module { get; set; }

    public DbSet<vt_tbl_ModulePermission> vt_tbl_ModulePermission { get; set; }

    public DbSet<vt_tbl_NACDeviceConfig> vt_tbl_NACDeviceConfig { get; set; }

    public DbSet<vt_tbl_Page> vt_tbl_Page { get; set; }

    public DbSet<vt_tbl_Page_Role_Mapping> vt_tbl_Page_Role_Mapping { get; set; }

    public DbSet<vt_tbl_PageDetails> vt_tbl_PageDetails { get; set; }

    public DbSet<vt_tbl_Payroll> vt_tbl_Payroll { get; set; }

    public DbSet<vt_tbl_PayrollLoanAmount> vt_tbl_PayrollLoanAmount { get; set; }

    public DbSet<vt_tbl_PayrollSalaryHeadAmout> vt_tbl_PayrollSalaryHeadAmout { get; set; }

    public DbSet<vt_tbl_PayrollSettings> vt_tbl_PayrollSettings { get; set; }

    public DbSet<vt_tbl_Permission> vt_tbl_Permission { get; set; }

    public DbSet<vt_tbl_PFMonthlyReturn> vt_tbl_PFMonthlyReturn { get; set; }

    public DbSet<vt_tbl_PFRules> vt_tbl_PFRules { get; set; }

    public DbSet<vt_tbl_PFSettings> vt_tbl_PFSettings { get; set; }

    public DbSet<vt_tbl_PreviousJobDetails> vt_tbl_PreviousJobDetails { get; set; }

    public DbSet<vt_tbl_ProvidentFund> vt_tbl_ProvidentFund { get; set; }

    public DbSet<vt_tbl_PTSettings> vt_tbl_PTSettings { get; set; }

    public DbSet<vt_tbl_QualificationDetails> vt_tbl_QualificationDetails { get; set; }

    public DbSet<vt_tbl_Resignations> vt_tbl_Resignations { get; set; }

    public DbSet<vt_tbl_Role> vt_tbl_Role { get; set; }

    public DbSet<vt_tbl_SalaryHead> vt_tbl_SalaryHead { get; set; }

    public DbSet<vt_tbl_salaryRecords> vt_tbl_salaryRecords { get; set; }

    public DbSet<vt_tbl_Settings> vt_tbl_Settings { get; set; }

    public DbSet<vt_tbl_SheetRecord> vt_tbl_SheetRecord { get; set; }

    public DbSet<vt_tbl_Shift> vt_tbl_Shift { get; set; }

    public DbSet<vt_tbl_ShiftAllotment> vt_tbl_ShiftAllotment { get; set; }

    public DbSet<vt_tbl_SitePages> vt_tbl_SitePages { get; set; }

    public DbSet<vt_tbl_SMS_Log> vt_tbl_SMS_Log { get; set; }

    public DbSet<vt_tbl_StaffBonus> vt_tbl_StaffBonus { get; set; }

    public DbSet<vt_tbl_Tax> vt_tbl_Tax { get; set; }

    public DbSet<vt_tbl_Tax_Rate_Role> vt_tbl_Tax_Rate_Role { get; set; }

    public DbSet<vt_tbl_TaxAdjustment> vt_tbl_TaxAdjustment { get; set; }

    public DbSet<vt_tbl_TaxMaster> vt_tbl_TaxMaster { get; set; }

    public DbSet<vt_tbl_TempAtt> vt_tbl_TempAtt { get; set; }

    public DbSet<vt_tbl_terminatedemployees> vt_tbl_terminatedemployees { get; set; }

    public DbSet<vt_tbl_TopDesignations> vt_tbl_TopDesignations { get; set; }

    public DbSet<vt_tbl_TypeofEmployee> vt_tbl_TypeofEmployee { get; set; }

    public DbSet<vt_tbl_TypeofSalary> vt_tbl_TypeofSalary { get; set; }

    public DbSet<vt_tbl_User> vt_tbl_User { get; set; }

    public DbSet<vt_tbl_UserRolePermission> vt_tbl_UserRolePermission { get; set; }

    public DbSet<vt_tbl_UserType> vt_tbl_UserType { get; set; }

    public DbSet<PerfCounter> PerfCounters { get; set; }

    public DbSet<Tally> Tallies { get; set; }

    public DbSet<vt_tbl_WorkingCalendar> vt_tbl_WorkingCalendar { get; set; }

    public DbSet<vt_tbl_Designation> vt_tbl_Designation { get; set; }

    public DbSet<vt_tbl_CompanyWorkingDays> vt_tbl_CompanyWorkingDays { get; set; }

    public DbSet<vt_tbl_EmployeeDocuments> vt_tbl_EmployeeDocuments { get; set; }

    public DbSet<vt_tbl_empjobinfolog> vt_tbl_empjobinfolog { get; set; }

    public DbSet<vt_tbl_EmployeeLeave> vt_tbl_EmployeeLeave { get; set; }


    public virtual ObjectResult<Nullable<int>> ApproveAndReject(Nullable<int> iD)
    {

        var iDParameter = iD.HasValue ?
            new ObjectParameter("ID", iD) :
            new ObjectParameter("ID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ApproveAndReject", iDParameter);
    }


    public virtual ObjectResult<Nullable<int>> ApproveLoanRequest(Nullable<int> iD)
    {

        var iDParameter = iD.HasValue ?
            new ObjectParameter("ID", iD) :
            new ObjectParameter("ID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ApproveLoanRequest", iDParameter);
    }


    public virtual ObjectResult<Nullable<int>> ApproveLoanRequestByHR(Nullable<int> iD)
    {

        var iDParameter = iD.HasValue ?
            new ObjectParameter("ID", iD) :
            new ObjectParameter("ID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ApproveLoanRequestByHR", iDParameter);
    }


    public virtual ObjectResult<BindAllUsersAndEmployeesForAdmin_Result> BindAllUsersAndEmployeesForAdmin(Nullable<int> roleID, Nullable<int> companyId)
    {

        var roleIDParameter = roleID.HasValue ?
            new ObjectParameter("RoleID", roleID) :
            new ObjectParameter("RoleID", typeof(int));


        var companyIdParameter = companyId.HasValue ?
            new ObjectParameter("CompanyId", companyId) :
            new ObjectParameter("CompanyId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BindAllUsersAndEmployeesForAdmin_Result>("BindAllUsersAndEmployeesForAdmin", roleIDParameter, companyIdParameter);
    }


    public virtual ObjectResult<BindEmployee_Result> BindEmployee()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BindEmployee_Result>("BindEmployee");
    }


    public virtual ObjectResult<BindGetRoles_Result> BindGetRoles()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BindGetRoles_Result>("BindGetRoles");
    }


    public virtual ObjectResult<BindRoles_Result> BindRoles()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BindRoles_Result>("BindRoles");
    }


    public virtual ObjectResult<BindUsers_Result> BindUsers()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BindUsers_Result>("BindUsers");
    }


    public virtual ObjectResult<BindUsersAndEmployees_Result> BindUsersAndEmployees(Nullable<int> roleID, Nullable<int> companyId)
    {

        var roleIDParameter = roleID.HasValue ?
            new ObjectParameter("RoleID", roleID) :
            new ObjectParameter("RoleID", typeof(int));


        var companyIdParameter = companyId.HasValue ?
            new ObjectParameter("CompanyId", companyId) :
            new ObjectParameter("CompanyId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BindUsersAndEmployees_Result>("BindUsersAndEmployees", roleIDParameter, companyIdParameter);
    }


    public virtual ObjectResult<BindUserType_Result> BindUserType()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BindUserType_Result>("BindUserType");
    }


    public virtual ObjectResult<Nullable<int>> CreateandModifyBonus(Nullable<int> iD, Nullable<int> empTypeId, Nullable<int> companyID, Nullable<int> salaryID, string bonusTitle, Nullable<int> matureDays, Nullable<int> bonusDays, Nullable<decimal> amount, Nullable<int> createdBy, Nullable<System.DateTime> createdOn, Nullable<bool> isActive)
    {

        var iDParameter = iD.HasValue ?
            new ObjectParameter("ID", iD) :
            new ObjectParameter("ID", typeof(int));


        var empTypeIdParameter = empTypeId.HasValue ?
            new ObjectParameter("EmpTypeId", empTypeId) :
            new ObjectParameter("EmpTypeId", typeof(int));


        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        var salaryIDParameter = salaryID.HasValue ?
            new ObjectParameter("SalaryID", salaryID) :
            new ObjectParameter("SalaryID", typeof(int));


        var bonusTitleParameter = bonusTitle != null ?
            new ObjectParameter("BonusTitle", bonusTitle) :
            new ObjectParameter("BonusTitle", typeof(string));


        var matureDaysParameter = matureDays.HasValue ?
            new ObjectParameter("MatureDays", matureDays) :
            new ObjectParameter("MatureDays", typeof(int));


        var bonusDaysParameter = bonusDays.HasValue ?
            new ObjectParameter("BonusDays", bonusDays) :
            new ObjectParameter("BonusDays", typeof(int));


        var amountParameter = amount.HasValue ?
            new ObjectParameter("Amount", amount) :
            new ObjectParameter("Amount", typeof(decimal));


        var createdByParameter = createdBy.HasValue ?
            new ObjectParameter("CreatedBy", createdBy) :
            new ObjectParameter("CreatedBy", typeof(int));


        var createdOnParameter = createdOn.HasValue ?
            new ObjectParameter("CreatedOn", createdOn) :
            new ObjectParameter("CreatedOn", typeof(System.DateTime));


        var isActiveParameter = isActive.HasValue ?
            new ObjectParameter("IsActive", isActive) :
            new ObjectParameter("IsActive", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CreateandModifyBonus", iDParameter, empTypeIdParameter, companyIDParameter, salaryIDParameter, bonusTitleParameter, matureDaysParameter, bonusDaysParameter, amountParameter, createdByParameter, createdOnParameter, isActiveParameter);
    }


    public virtual ObjectResult<Nullable<int>> CreateandModifyRoles(Nullable<int> roleID, string role, Nullable<System.DateTime> createdOn, Nullable<int> createdBy, Nullable<bool> isActive)
    {

        var roleIDParameter = roleID.HasValue ?
            new ObjectParameter("RoleID", roleID) :
            new ObjectParameter("RoleID", typeof(int));


        var roleParameter = role != null ?
            new ObjectParameter("Role", role) :
            new ObjectParameter("Role", typeof(string));


        var createdOnParameter = createdOn.HasValue ?
            new ObjectParameter("CreatedOn", createdOn) :
            new ObjectParameter("CreatedOn", typeof(System.DateTime));


        var createdByParameter = createdBy.HasValue ?
            new ObjectParameter("CreatedBy", createdBy) :
            new ObjectParameter("CreatedBy", typeof(int));


        var isActiveParameter = isActive.HasValue ?
            new ObjectParameter("IsActive", isActive) :
            new ObjectParameter("IsActive", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CreateandModifyRoles", roleIDParameter, roleParameter, createdOnParameter, createdByParameter, isActiveParameter);
    }


    public virtual ObjectResult<Nullable<int>> CreateUsersp(Nullable<int> employeeID, string employeeEnrollId, Nullable<int> userID, string userName, string passsword, string firstName, string lastName, string email, Nullable<int> companyID, Nullable<int> roleID, Nullable<System.DateTime> createdOn, Nullable<int> createdBy, Nullable<bool> active)
    {

        var employeeIDParameter = employeeID.HasValue ?
            new ObjectParameter("EmployeeID", employeeID) :
            new ObjectParameter("EmployeeID", typeof(int));


        var employeeEnrollIdParameter = employeeEnrollId != null ?
            new ObjectParameter("EmployeeEnrollId", employeeEnrollId) :
            new ObjectParameter("EmployeeEnrollId", typeof(string));


        var userIDParameter = userID.HasValue ?
            new ObjectParameter("UserID", userID) :
            new ObjectParameter("UserID", typeof(int));


        var userNameParameter = userName != null ?
            new ObjectParameter("UserName", userName) :
            new ObjectParameter("UserName", typeof(string));


        var passswordParameter = passsword != null ?
            new ObjectParameter("Passsword", passsword) :
            new ObjectParameter("Passsword", typeof(string));


        var firstNameParameter = firstName != null ?
            new ObjectParameter("FirstName", firstName) :
            new ObjectParameter("FirstName", typeof(string));


        var lastNameParameter = lastName != null ?
            new ObjectParameter("LastName", lastName) :
            new ObjectParameter("LastName", typeof(string));


        var emailParameter = email != null ?
            new ObjectParameter("Email", email) :
            new ObjectParameter("Email", typeof(string));


        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        var roleIDParameter = roleID.HasValue ?
            new ObjectParameter("RoleID", roleID) :
            new ObjectParameter("RoleID", typeof(int));


        var createdOnParameter = createdOn.HasValue ?
            new ObjectParameter("CreatedOn", createdOn) :
            new ObjectParameter("CreatedOn", typeof(System.DateTime));


        var createdByParameter = createdBy.HasValue ?
            new ObjectParameter("CreatedBy", createdBy) :
            new ObjectParameter("CreatedBy", typeof(int));


        var activeParameter = active.HasValue ?
            new ObjectParameter("Active", active) :
            new ObjectParameter("Active", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CreateUsersp", employeeIDParameter, employeeEnrollIdParameter, userIDParameter, userNameParameter, passswordParameter, firstNameParameter, lastNameParameter, emailParameter, companyIDParameter, roleIDParameter, createdOnParameter, createdByParameter, activeParameter);
    }


    public virtual ObjectResult<Nullable<int>> DeleteBonusByID(Nullable<int> iD)
    {

        var iDParameter = iD.HasValue ?
            new ObjectParameter("ID", iD) :
            new ObjectParameter("ID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("DeleteBonusByID", iDParameter);
    }


    public virtual int DeleteRolesDetails(Nullable<int> roleID)
    {

        var roleIDParameter = roleID.HasValue ?
            new ObjectParameter("RoleID", roleID) :
            new ObjectParameter("RoleID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteRolesDetails", roleIDParameter);
    }


    public virtual ObjectResult<Nullable<int>> DeleteStaffBonusByID(Nullable<int> iD)
    {

        var iDParameter = iD.HasValue ?
            new ObjectParameter("ID", iD) :
            new ObjectParameter("ID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("DeleteStaffBonusByID", iDParameter);
    }


    public virtual ObjectResult<getAmountGroupBbyEmployeeID_Result> getAmountGroupBbyEmployeeID(Nullable<int> empID)
    {

        var empIDParameter = empID.HasValue ?
            new ObjectParameter("EmpID", empID) :
            new ObjectParameter("EmpID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getAmountGroupBbyEmployeeID_Result>("getAmountGroupBbyEmployeeID", empIDParameter);
    }


    public virtual ObjectResult<getAmountGroupBbyEnrollId_Result> getAmountGroupBbyEnrollId(Nullable<int> empID)
    {

        var empIDParameter = empID.HasValue ?
            new ObjectParameter("EmpID", empID) :
            new ObjectParameter("EmpID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getAmountGroupBbyEnrollId_Result>("getAmountGroupBbyEnrollId", empIDParameter);
    }


    public virtual ObjectResult<GetBonus_Result> GetBonus(Nullable<int> companyID)
    {

        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBonus_Result>("GetBonus", companyIDParameter);
    }


    public virtual ObjectResult<GetBonusBonusByID_Result> GetBonusBonusByID(Nullable<int> iD)
    {

        var iDParameter = iD.HasValue ?
            new ObjectParameter("ID", iD) :
            new ObjectParameter("ID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBonusBonusByID_Result>("GetBonusBonusByID", iDParameter);
    }


    public virtual ObjectResult<GetBonusByID_Result> GetBonusByID(Nullable<int> iD)
    {

        var iDParameter = iD.HasValue ?
            new ObjectParameter("ID", iD) :
            new ObjectParameter("ID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBonusByID_Result>("GetBonusByID", iDParameter);
    }


    public virtual ObjectResult<GetLoanApprovedRecord_Result> GetLoanApprovedRecord()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLoanApprovedRecord_Result>("GetLoanApprovedRecord");
    }


    public virtual ObjectResult<GetLoanRequestRecord_Result> GetLoanRequestRecord(Nullable<int> roleID, Nullable<int> companyID)
    {

        var roleIDParameter = roleID.HasValue ?
            new ObjectParameter("RoleID", roleID) :
            new ObjectParameter("RoleID", typeof(int));


        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLoanRequestRecord_Result>("GetLoanRequestRecord", roleIDParameter, companyIDParameter);
    }


    public virtual ObjectResult<GetLoanRequestRecordByID_Result> GetLoanRequestRecordByID(Nullable<int> iD)
    {

        var iDParameter = iD.HasValue ?
            new ObjectParameter("ID", iD) :
            new ObjectParameter("ID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLoanRequestRecordByID_Result>("GetLoanRequestRecordByID", iDParameter);
    }


    public virtual ObjectResult<GetRoles_Result> GetRoles()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetRoles_Result>("GetRoles");
    }


    public virtual ObjectResult<GetRolesDetails_Result> GetRolesDetails(Nullable<int> roleID)
    {

        var roleIDParameter = roleID.HasValue ?
            new ObjectParameter("RoleID", roleID) :
            new ObjectParameter("RoleID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetRolesDetails_Result>("GetRolesDetails", roleIDParameter);
    }


    public virtual ObjectResult<Nullable<int>> ModifyBonus(Nullable<int> iD, Nullable<int> empTypeId, Nullable<int> companyID, Nullable<int> salaryID, string bonusTitle, Nullable<int> matureDays, Nullable<int> bonusDays, Nullable<decimal> amount, Nullable<int> modifiedBy, Nullable<System.DateTime> modifiedon, Nullable<bool> isActive)
    {

        var iDParameter = iD.HasValue ?
            new ObjectParameter("ID", iD) :
            new ObjectParameter("ID", typeof(int));


        var empTypeIdParameter = empTypeId.HasValue ?
            new ObjectParameter("EmpTypeId", empTypeId) :
            new ObjectParameter("EmpTypeId", typeof(int));


        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        var salaryIDParameter = salaryID.HasValue ?
            new ObjectParameter("SalaryID", salaryID) :
            new ObjectParameter("SalaryID", typeof(int));


        var bonusTitleParameter = bonusTitle != null ?
            new ObjectParameter("BonusTitle", bonusTitle) :
            new ObjectParameter("BonusTitle", typeof(string));


        var matureDaysParameter = matureDays.HasValue ?
            new ObjectParameter("MatureDays", matureDays) :
            new ObjectParameter("MatureDays", typeof(int));


        var bonusDaysParameter = bonusDays.HasValue ?
            new ObjectParameter("BonusDays", bonusDays) :
            new ObjectParameter("BonusDays", typeof(int));


        var amountParameter = amount.HasValue ?
            new ObjectParameter("Amount", amount) :
            new ObjectParameter("Amount", typeof(decimal));


        var modifiedByParameter = modifiedBy.HasValue ?
            new ObjectParameter("ModifiedBy", modifiedBy) :
            new ObjectParameter("ModifiedBy", typeof(int));


        var modifiedonParameter = modifiedon.HasValue ?
            new ObjectParameter("Modifiedon", modifiedon) :
            new ObjectParameter("Modifiedon", typeof(System.DateTime));


        var isActiveParameter = isActive.HasValue ?
            new ObjectParameter("IsActive", isActive) :
            new ObjectParameter("IsActive", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ModifyBonus", iDParameter, empTypeIdParameter, companyIDParameter, salaryIDParameter, bonusTitleParameter, matureDaysParameter, bonusDaysParameter, amountParameter, modifiedByParameter, modifiedonParameter, isActiveParameter);
    }


    public virtual ObjectResult<Nullable<int>> ModifyRoles(Nullable<int> roleID, string role, Nullable<System.DateTime> updatedOn, Nullable<int> updatedBy, Nullable<bool> isActive)
    {

        var roleIDParameter = roleID.HasValue ?
            new ObjectParameter("RoleID", roleID) :
            new ObjectParameter("RoleID", typeof(int));


        var roleParameter = role != null ?
            new ObjectParameter("Role", role) :
            new ObjectParameter("Role", typeof(string));


        var updatedOnParameter = updatedOn.HasValue ?
            new ObjectParameter("UpdatedOn", updatedOn) :
            new ObjectParameter("UpdatedOn", typeof(System.DateTime));


        var updatedByParameter = updatedBy.HasValue ?
            new ObjectParameter("UpdatedBy", updatedBy) :
            new ObjectParameter("UpdatedBy", typeof(int));


        var isActiveParameter = isActive.HasValue ?
            new ObjectParameter("IsActive", isActive) :
            new ObjectParameter("IsActive", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ModifyRoles", roleIDParameter, roleParameter, updatedOnParameter, updatedByParameter, isActiveParameter);
    }


    public virtual ObjectResult<Nullable<int>> ModifyStaffBonus(Nullable<int> iD, Nullable<int> bonusId, Nullable<System.DateTime> month, Nullable<int> modifiedBy, Nullable<System.DateTime> modifiedon, Nullable<bool> isActive, Nullable<int> companyID)
    {

        var iDParameter = iD.HasValue ?
            new ObjectParameter("ID", iD) :
            new ObjectParameter("ID", typeof(int));


        var bonusIdParameter = bonusId.HasValue ?
            new ObjectParameter("BonusId", bonusId) :
            new ObjectParameter("BonusId", typeof(int));


        var monthParameter = month.HasValue ?
            new ObjectParameter("Month", month) :
            new ObjectParameter("Month", typeof(System.DateTime));


        var modifiedByParameter = modifiedBy.HasValue ?
            new ObjectParameter("ModifiedBy", modifiedBy) :
            new ObjectParameter("ModifiedBy", typeof(int));


        var modifiedonParameter = modifiedon.HasValue ?
            new ObjectParameter("Modifiedon", modifiedon) :
            new ObjectParameter("Modifiedon", typeof(System.DateTime));


        var isActiveParameter = isActive.HasValue ?
            new ObjectParameter("IsActive", isActive) :
            new ObjectParameter("IsActive", typeof(bool));


        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ModifyStaffBonus", iDParameter, bonusIdParameter, monthParameter, modifiedByParameter, modifiedonParameter, isActiveParameter, companyIDParameter);
    }


    public virtual ObjectResult<Nullable<int>> RejectLoanRequest(Nullable<int> iD)
    {

        var iDParameter = iD.HasValue ?
            new ObjectParameter("ID", iD) :
            new ObjectParameter("ID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("RejectLoanRequest", iDParameter);
    }


    public virtual ObjectResult<Nullable<int>> RejectLoanRequestByHR(Nullable<int> iD)
    {

        var iDParameter = iD.HasValue ?
            new ObjectParameter("ID", iD) :
            new ObjectParameter("ID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("RejectLoanRequestByHR", iDParameter);
    }


    public virtual ObjectResult<Nullable<int>> RoleDeleteById(Nullable<int> iD)
    {

        var iDParameter = iD.HasValue ?
            new ObjectParameter("ID", iD) :
            new ObjectParameter("ID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("RoleDeleteById", iDParameter);
    }


    public virtual ObjectResult<Sp_CheckPSIDAndPassword_Result> Sp_CheckPSIDAndPassword(string userName, string password)
    {

        var userNameParameter = userName != null ?
            new ObjectParameter("UserName", userName) :
            new ObjectParameter("UserName", typeof(string));


        var passwordParameter = password != null ?
            new ObjectParameter("Password", password) :
            new ObjectParameter("Password", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_CheckPSIDAndPassword_Result>("Sp_CheckPSIDAndPassword", userNameParameter, passwordParameter);
    }


    public virtual int Sp_DeleteEmployeeType(Nullable<int> id)
    {

        var idParameter = id.HasValue ?
            new ObjectParameter("Id", id) :
            new ObjectParameter("Id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_DeleteEmployeeType", idParameter);
    }


    public virtual int Sp_DeleteModulePermission(Nullable<int> roleID, Nullable<int> userID)
    {

        var roleIDParameter = roleID.HasValue ?
            new ObjectParameter("RoleID", roleID) :
            new ObjectParameter("RoleID", typeof(int));


        var userIDParameter = userID.HasValue ?
            new ObjectParameter("UserID", userID) :
            new ObjectParameter("UserID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_DeleteModulePermission", roleIDParameter, userIDParameter);
    }


    public virtual int sp_DeletePFRules(Nullable<int> id)
    {

        var idParameter = id.HasValue ?
            new ObjectParameter("Id", id) :
            new ObjectParameter("Id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DeletePFRules", idParameter);
    }


    public virtual int sp_DeleteQualification(Nullable<int> id, Nullable<int> employeeId, Nullable<int> type, Nullable<bool> isActive)
    {

        var idParameter = id.HasValue ?
            new ObjectParameter("Id", id) :
            new ObjectParameter("Id", typeof(int));


        var employeeIdParameter = employeeId.HasValue ?
            new ObjectParameter("EmployeeId", employeeId) :
            new ObjectParameter("EmployeeId", typeof(int));


        var typeParameter = type.HasValue ?
            new ObjectParameter("Type", type) :
            new ObjectParameter("Type", typeof(int));


        var isActiveParameter = isActive.HasValue ?
            new ObjectParameter("IsActive", isActive) :
            new ObjectParameter("IsActive", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DeleteQualification", idParameter, employeeIdParameter, typeParameter, isActiveParameter);
    }


    public virtual int Sp_DeleteRolePagePermission(Nullable<int> roleID, Nullable<int> userID)
    {

        var roleIDParameter = roleID.HasValue ?
            new ObjectParameter("RoleID", roleID) :
            new ObjectParameter("RoleID", typeof(int));


        var userIDParameter = userID.HasValue ?
            new ObjectParameter("UserID", userID) :
            new ObjectParameter("UserID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_DeleteRolePagePermission", roleIDParameter, userIDParameter);
    }


    public virtual int Sp_deletestaff(Nullable<int> staffPFID)
    {

        var staffPFIDParameter = staffPFID.HasValue ?
            new ObjectParameter("StaffPFID", staffPFID) :
            new ObjectParameter("StaffPFID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_deletestaff", staffPFIDParameter);
    }


    public virtual ObjectResult<Nullable<int>> Sp_deleteUSer(Nullable<int> userID)
    {

        var userIDParameter = userID.HasValue ?
            new ObjectParameter("UserID", userID) :
            new ObjectParameter("UserID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Sp_deleteUSer", userIDParameter);
    }


    public virtual int sp_ExportExcel(string firstName, string lastName, Nullable<System.DateTime> dOB)
    {

        var firstNameParameter = firstName != null ?
            new ObjectParameter("FirstName", firstName) :
            new ObjectParameter("FirstName", typeof(string));


        var lastNameParameter = lastName != null ?
            new ObjectParameter("LastName", lastName) :
            new ObjectParameter("LastName", typeof(string));


        var dOBParameter = dOB.HasValue ?
            new ObjectParameter("DOB", dOB) :
            new ObjectParameter("DOB", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ExportExcel", firstNameParameter, lastNameParameter, dOBParameter);
    }


    public virtual ObjectResult<SP_Get_Company_Result> SP_Get_Company(Nullable<int> companyID)
    {

        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Get_Company_Result>("SP_Get_Company", companyIDParameter);
    }


    public virtual ObjectResult<Sp_GetAllModuleByModuleID_Result> Sp_GetAllModuleByModuleID(Nullable<int> moduleID)
    {

        var moduleIDParameter = moduleID.HasValue ?
            new ObjectParameter("ModuleID", moduleID) :
            new ObjectParameter("ModuleID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetAllModuleByModuleID_Result>("Sp_GetAllModuleByModuleID", moduleIDParameter);
    }


    public virtual ObjectResult<Sp_GetAllPageByModuleID_Result> Sp_GetAllPageByModuleID(Nullable<int> moduleID)
    {

        var moduleIDParameter = moduleID.HasValue ?
            new ObjectParameter("ModuleID", moduleID) :
            new ObjectParameter("ModuleID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetAllPageByModuleID_Result>("Sp_GetAllPageByModuleID", moduleIDParameter);
    }


    public virtual ObjectResult<Sp_GetAllPageByPageID_Result> Sp_GetAllPageByPageID(Nullable<int> pageID)
    {

        var pageIDParameter = pageID.HasValue ?
            new ObjectParameter("PageID", pageID) :
            new ObjectParameter("PageID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetAllPageByPageID_Result>("Sp_GetAllPageByPageID", pageIDParameter);
    }


    public virtual ObjectResult<Sp_GetCompany_Result> Sp_GetCompany()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetCompany_Result>("Sp_GetCompany");
    }


    public virtual ObjectResult<sp_GetCompanyPFrules_Result> sp_GetCompanyPFrules(Nullable<int> staffPFID, Nullable<int> companyID)
    {

        var staffPFIDParameter = staffPFID.HasValue ?
            new ObjectParameter("StaffPFID", staffPFID) :
            new ObjectParameter("StaffPFID", typeof(int));


        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetCompanyPFrules_Result>("sp_GetCompanyPFrules", staffPFIDParameter, companyIDParameter);
    }


    public virtual ObjectResult<Sp_GetCompanyStaffPFID_Result> Sp_GetCompanyStaffPFID(Nullable<int> staffPFID)
    {

        var staffPFIDParameter = staffPFID.HasValue ?
            new ObjectParameter("StaffPFID", staffPFID) :
            new ObjectParameter("StaffPFID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetCompanyStaffPFID_Result>("Sp_GetCompanyStaffPFID", staffPFIDParameter);
    }


    public virtual ObjectResult<Sp_GetEmployeeTypeByID_Result> Sp_GetEmployeeTypeByID(Nullable<int> id)
    {

        var idParameter = id.HasValue ?
            new ObjectParameter("Id", id) :
            new ObjectParameter("Id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetEmployeeTypeByID_Result>("Sp_GetEmployeeTypeByID", idParameter);
    }


    public virtual ObjectResult<Sp_GetGraduity_Result> Sp_GetGraduity(Nullable<int> id)
    {

        var idParameter = id.HasValue ?
            new ObjectParameter("Id", id) :
            new ObjectParameter("Id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetGraduity_Result>("Sp_GetGraduity", idParameter);
    }


    public virtual ObjectResult<sp_GetGraduityByID_Result> sp_GetGraduityByID(Nullable<int> id)
    {

        var idParameter = id.HasValue ?
            new ObjectParameter("Id", id) :
            new ObjectParameter("Id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetGraduityByID_Result>("sp_GetGraduityByID", idParameter);
    }


    public virtual ObjectResult<Sp_GetMenuByRoleID_Result> Sp_GetMenuByRoleID(Nullable<int> roleID)
    {

        var roleIDParameter = roleID.HasValue ?
            new ObjectParameter("RoleID", roleID) :
            new ObjectParameter("RoleID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetMenuByRoleID_Result>("Sp_GetMenuByRoleID", roleIDParameter);
    }


    public virtual ObjectResult<sp_GetMenuByUser_Result> sp_GetMenuByUser(Nullable<int> moduleId, Nullable<int> userId)
    {

        var moduleIdParameter = moduleId.HasValue ?
            new ObjectParameter("ModuleId", moduleId) :
            new ObjectParameter("ModuleId", typeof(int));


        var userIdParameter = userId.HasValue ?
            new ObjectParameter("UserId", userId) :
            new ObjectParameter("UserId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetMenuByUser_Result>("sp_GetMenuByUser", moduleIdParameter, userIdParameter);
    }


    public virtual ObjectResult<Sp_GetModuleRights_Result> Sp_GetModuleRights(Nullable<int> roleID, Nullable<int> userID)
    {

        var roleIDParameter = roleID.HasValue ?
            new ObjectParameter("RoleID", roleID) :
            new ObjectParameter("RoleID", typeof(int));


        var userIDParameter = userID.HasValue ?
            new ObjectParameter("UserID", userID) :
            new ObjectParameter("UserID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetModuleRights_Result>("Sp_GetModuleRights", roleIDParameter, userIDParameter);
    }


    public virtual ObjectResult<sp_GetPagePermissionPage_Result> sp_GetPagePermissionPage(Nullable<int> roleID, Nullable<int> userID)
    {

        var roleIDParameter = roleID.HasValue ?
            new ObjectParameter("RoleID", roleID) :
            new ObjectParameter("RoleID", typeof(int));


        var userIDParameter = userID.HasValue ?
            new ObjectParameter("UserID", userID) :
            new ObjectParameter("UserID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetPagePermissionPage_Result>("sp_GetPagePermissionPage", roleIDParameter, userIDParameter);
    }


    public virtual ObjectResult<sp_GetPagePermissionPages_Result> sp_GetPagePermissionPages(Nullable<int> roleID, Nullable<int> userID)
    {

        var roleIDParameter = roleID.HasValue ?
            new ObjectParameter("RoleID", roleID) :
            new ObjectParameter("RoleID", typeof(int));


        var userIDParameter = userID.HasValue ?
            new ObjectParameter("UserID", userID) :
            new ObjectParameter("UserID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetPagePermissionPages_Result>("sp_GetPagePermissionPages", roleIDParameter, userIDParameter);
    }


    public virtual ObjectResult<Sp_GetPF_Rules_Result> Sp_GetPF_Rules(Nullable<int> id)
    {

        var idParameter = id.HasValue ?
            new ObjectParameter("Id", id) :
            new ObjectParameter("Id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetPF_Rules_Result>("Sp_GetPF_Rules", idParameter);
    }


    public virtual ObjectResult<Sp_GetUserbyID_Result> Sp_GetUserbyID(Nullable<int> userID)
    {

        var userIDParameter = userID.HasValue ?
            new ObjectParameter("UserID", userID) :
            new ObjectParameter("UserID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetUserbyID_Result>("Sp_GetUserbyID", userIDParameter);
    }


    public virtual int Sp_GraduitydeleteByID(Nullable<int> id)
    {

        var idParameter = id.HasValue ?
            new ObjectParameter("Id", id) :
            new ObjectParameter("Id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_GraduitydeleteByID", idParameter);
    }


    public virtual int Sp_InsertUpdate(Nullable<int> userID, Nullable<int> companyID, string userName, string passsword, Nullable<int> roleID, string lastName, Nullable<bool> active, Nullable<System.DateTime> createdDate, string email, string firstName, Nullable<System.DateTime> createdOn, Nullable<int> createdBy, Nullable<System.DateTime> deleted, Nullable<System.DateTime> updatedOn, Nullable<int> updatedBy, Nullable<int> deletedBy)
    {

        var userIDParameter = userID.HasValue ?
            new ObjectParameter("UserID", userID) :
            new ObjectParameter("UserID", typeof(int));


        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        var userNameParameter = userName != null ?
            new ObjectParameter("UserName", userName) :
            new ObjectParameter("UserName", typeof(string));


        var passswordParameter = passsword != null ?
            new ObjectParameter("Passsword", passsword) :
            new ObjectParameter("Passsword", typeof(string));


        var roleIDParameter = roleID.HasValue ?
            new ObjectParameter("RoleID", roleID) :
            new ObjectParameter("RoleID", typeof(int));


        var lastNameParameter = lastName != null ?
            new ObjectParameter("LastName", lastName) :
            new ObjectParameter("LastName", typeof(string));


        var activeParameter = active.HasValue ?
            new ObjectParameter("Active", active) :
            new ObjectParameter("Active", typeof(bool));


        var createdDateParameter = createdDate.HasValue ?
            new ObjectParameter("CreatedDate", createdDate) :
            new ObjectParameter("CreatedDate", typeof(System.DateTime));


        var emailParameter = email != null ?
            new ObjectParameter("Email", email) :
            new ObjectParameter("Email", typeof(string));


        var firstNameParameter = firstName != null ?
            new ObjectParameter("FirstName", firstName) :
            new ObjectParameter("FirstName", typeof(string));


        var createdOnParameter = createdOn.HasValue ?
            new ObjectParameter("CreatedOn", createdOn) :
            new ObjectParameter("CreatedOn", typeof(System.DateTime));


        var createdByParameter = createdBy.HasValue ?
            new ObjectParameter("CreatedBy", createdBy) :
            new ObjectParameter("CreatedBy", typeof(int));


        var deletedParameter = deleted.HasValue ?
            new ObjectParameter("Deleted", deleted) :
            new ObjectParameter("Deleted", typeof(System.DateTime));


        var updatedOnParameter = updatedOn.HasValue ?
            new ObjectParameter("UpdatedOn", updatedOn) :
            new ObjectParameter("UpdatedOn", typeof(System.DateTime));


        var updatedByParameter = updatedBy.HasValue ?
            new ObjectParameter("UpdatedBy", updatedBy) :
            new ObjectParameter("UpdatedBy", typeof(int));


        var deletedByParameter = deletedBy.HasValue ?
            new ObjectParameter("DeletedBy", deletedBy) :
            new ObjectParameter("DeletedBy", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_InsertUpdate", userIDParameter, companyIDParameter, userNameParameter, passswordParameter, roleIDParameter, lastNameParameter, activeParameter, createdDateParameter, emailParameter, firstNameParameter, createdOnParameter, createdByParameter, deletedParameter, updatedOnParameter, updatedByParameter, deletedByParameter);
    }


    public virtual int Sp_InsertUpdateModulPermissionByRoleID(Nullable<int> modulePermissionID, Nullable<int> roleID, Nullable<int> userID, Nullable<int> moduleID, Nullable<bool> can_View, Nullable<bool> can_Insert, Nullable<bool> can_Update, Nullable<bool> can_Delete, Nullable<byte> active, Nullable<int> createBy, Nullable<System.DateTime> createDate)
    {

        var modulePermissionIDParameter = modulePermissionID.HasValue ?
            new ObjectParameter("ModulePermissionID", modulePermissionID) :
            new ObjectParameter("ModulePermissionID", typeof(int));


        var roleIDParameter = roleID.HasValue ?
            new ObjectParameter("RoleID", roleID) :
            new ObjectParameter("RoleID", typeof(int));


        var userIDParameter = userID.HasValue ?
            new ObjectParameter("UserID", userID) :
            new ObjectParameter("UserID", typeof(int));


        var moduleIDParameter = moduleID.HasValue ?
            new ObjectParameter("ModuleID", moduleID) :
            new ObjectParameter("ModuleID", typeof(int));


        var can_ViewParameter = can_View.HasValue ?
            new ObjectParameter("Can_View", can_View) :
            new ObjectParameter("Can_View", typeof(bool));


        var can_InsertParameter = can_Insert.HasValue ?
            new ObjectParameter("Can_Insert", can_Insert) :
            new ObjectParameter("Can_Insert", typeof(bool));


        var can_UpdateParameter = can_Update.HasValue ?
            new ObjectParameter("Can_Update", can_Update) :
            new ObjectParameter("Can_Update", typeof(bool));


        var can_DeleteParameter = can_Delete.HasValue ?
            new ObjectParameter("Can_Delete", can_Delete) :
            new ObjectParameter("Can_Delete", typeof(bool));


        var activeParameter = active.HasValue ?
            new ObjectParameter("Active", active) :
            new ObjectParameter("Active", typeof(byte));


        var createByParameter = createBy.HasValue ?
            new ObjectParameter("CreateBy", createBy) :
            new ObjectParameter("CreateBy", typeof(int));


        var createDateParameter = createDate.HasValue ?
            new ObjectParameter("CreateDate", createDate) :
            new ObjectParameter("CreateDate", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_InsertUpdateModulPermissionByRoleID", modulePermissionIDParameter, roleIDParameter, userIDParameter, moduleIDParameter, can_ViewParameter, can_InsertParameter, can_UpdateParameter, can_DeleteParameter, activeParameter, createByParameter, createDateParameter);
    }


    public virtual int Sp_InsertUpdatePagePermission(Nullable<int> permissionID, Nullable<int> roleID, Nullable<int> userID, Nullable<int> pageID, Nullable<bool> can_View, Nullable<bool> can_Insert, Nullable<bool> can_Update, Nullable<bool> can_Delete, Nullable<byte> active, Nullable<int> createBy, Nullable<System.DateTime> createDate)
    {

        var permissionIDParameter = permissionID.HasValue ?
            new ObjectParameter("PermissionID", permissionID) :
            new ObjectParameter("PermissionID", typeof(int));


        var roleIDParameter = roleID.HasValue ?
            new ObjectParameter("RoleID", roleID) :
            new ObjectParameter("RoleID", typeof(int));


        var userIDParameter = userID.HasValue ?
            new ObjectParameter("UserID", userID) :
            new ObjectParameter("UserID", typeof(int));


        var pageIDParameter = pageID.HasValue ?
            new ObjectParameter("PageID", pageID) :
            new ObjectParameter("PageID", typeof(int));


        var can_ViewParameter = can_View.HasValue ?
            new ObjectParameter("Can_View", can_View) :
            new ObjectParameter("Can_View", typeof(bool));


        var can_InsertParameter = can_Insert.HasValue ?
            new ObjectParameter("Can_Insert", can_Insert) :
            new ObjectParameter("Can_Insert", typeof(bool));


        var can_UpdateParameter = can_Update.HasValue ?
            new ObjectParameter("Can_Update", can_Update) :
            new ObjectParameter("Can_Update", typeof(bool));


        var can_DeleteParameter = can_Delete.HasValue ?
            new ObjectParameter("Can_Delete", can_Delete) :
            new ObjectParameter("Can_Delete", typeof(bool));


        var activeParameter = active.HasValue ?
            new ObjectParameter("Active", active) :
            new ObjectParameter("Active", typeof(byte));


        var createByParameter = createBy.HasValue ?
            new ObjectParameter("CreateBy", createBy) :
            new ObjectParameter("CreateBy", typeof(int));


        var createDateParameter = createDate.HasValue ?
            new ObjectParameter("CreateDate", createDate) :
            new ObjectParameter("CreateDate", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_InsertUpdatePagePermission", permissionIDParameter, roleIDParameter, userIDParameter, pageIDParameter, can_ViewParameter, can_InsertParameter, can_UpdateParameter, can_DeleteParameter, activeParameter, createByParameter, createDateParameter);
    }


    public virtual ObjectResult<Nullable<decimal>> Sp_insertUpdatePF_Rules(Nullable<int> id, string typeOfEmployee, string salaryType, Nullable<decimal> percent, Nullable<int> companyID, Nullable<System.DateTime> createdOn, Nullable<int> createdBy, Nullable<bool> active, Nullable<System.DateTime> deleted, Nullable<System.DateTime> updatedOn, Nullable<int> updatedBy)
    {

        var idParameter = id.HasValue ?
            new ObjectParameter("Id", id) :
            new ObjectParameter("Id", typeof(int));


        var typeOfEmployeeParameter = typeOfEmployee != null ?
            new ObjectParameter("TypeOfEmployee", typeOfEmployee) :
            new ObjectParameter("TypeOfEmployee", typeof(string));


        var salaryTypeParameter = salaryType != null ?
            new ObjectParameter("SalaryType", salaryType) :
            new ObjectParameter("SalaryType", typeof(string));


        var percentParameter = percent.HasValue ?
            new ObjectParameter("Percent", percent) :
            new ObjectParameter("Percent", typeof(decimal));


        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        var createdOnParameter = createdOn.HasValue ?
            new ObjectParameter("CreatedOn", createdOn) :
            new ObjectParameter("CreatedOn", typeof(System.DateTime));


        var createdByParameter = createdBy.HasValue ?
            new ObjectParameter("CreatedBy", createdBy) :
            new ObjectParameter("CreatedBy", typeof(int));


        var activeParameter = active.HasValue ?
            new ObjectParameter("Active", active) :
            new ObjectParameter("Active", typeof(bool));


        var deletedParameter = deleted.HasValue ?
            new ObjectParameter("Deleted", deleted) :
            new ObjectParameter("Deleted", typeof(System.DateTime));


        var updatedOnParameter = updatedOn.HasValue ?
            new ObjectParameter("UpdatedOn", updatedOn) :
            new ObjectParameter("UpdatedOn", typeof(System.DateTime));


        var updatedByParameter = updatedBy.HasValue ?
            new ObjectParameter("updatedBy", updatedBy) :
            new ObjectParameter("updatedBy", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("Sp_insertUpdatePF_Rules", idParameter, typeOfEmployeeParameter, salaryTypeParameter, percentParameter, companyIDParameter, createdOnParameter, createdByParameter, activeParameter, deletedParameter, updatedOnParameter, updatedByParameter);
    }


    public virtual ObjectResult<string> Sp_insertUpdateTypeOfEmp(Nullable<int> id, string type, Nullable<int> companyId, Nullable<int> createdOn, Nullable<int> createdBy, Nullable<bool> active, Nullable<System.DateTime> deleted, Nullable<System.DateTime> updatedOn, Nullable<int> updatedBy)
    {

        var idParameter = id.HasValue ?
            new ObjectParameter("Id", id) :
            new ObjectParameter("Id", typeof(int));


        var typeParameter = type != null ?
            new ObjectParameter("Type", type) :
            new ObjectParameter("Type", typeof(string));


        var companyIdParameter = companyId.HasValue ?
            new ObjectParameter("CompanyId", companyId) :
            new ObjectParameter("CompanyId", typeof(int));


        var createdOnParameter = createdOn.HasValue ?
            new ObjectParameter("CreatedOn", createdOn) :
            new ObjectParameter("CreatedOn", typeof(int));


        var createdByParameter = createdBy.HasValue ?
            new ObjectParameter("CreatedBy", createdBy) :
            new ObjectParameter("CreatedBy", typeof(int));


        var activeParameter = active.HasValue ?
            new ObjectParameter("Active", active) :
            new ObjectParameter("Active", typeof(bool));


        var deletedParameter = deleted.HasValue ?
            new ObjectParameter("Deleted", deleted) :
            new ObjectParameter("Deleted", typeof(System.DateTime));


        var updatedOnParameter = updatedOn.HasValue ?
            new ObjectParameter("UpdatedOn", updatedOn) :
            new ObjectParameter("UpdatedOn", typeof(System.DateTime));


        var updatedByParameter = updatedBy.HasValue ?
            new ObjectParameter("UpdatedBy", updatedBy) :
            new ObjectParameter("UpdatedBy", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Sp_insertUpdateTypeOfEmp", idParameter, typeParameter, companyIdParameter, createdOnParameter, createdByParameter, activeParameter, deletedParameter, updatedOnParameter, updatedByParameter);
    }


    public virtual ObjectResult<Nullable<int>> Sp_insertUpdateTypeOfEmp_Test(Nullable<int> id, string type, Nullable<int> companyId, Nullable<int> createdOn, Nullable<int> createdBy, Nullable<bool> active, Nullable<System.DateTime> deleted, Nullable<System.DateTime> updatedOn, Nullable<int> updatedBy)
    {

        var idParameter = id.HasValue ?
            new ObjectParameter("Id", id) :
            new ObjectParameter("Id", typeof(int));


        var typeParameter = type != null ?
            new ObjectParameter("Type", type) :
            new ObjectParameter("Type", typeof(string));


        var companyIdParameter = companyId.HasValue ?
            new ObjectParameter("CompanyId", companyId) :
            new ObjectParameter("CompanyId", typeof(int));


        var createdOnParameter = createdOn.HasValue ?
            new ObjectParameter("CreatedOn", createdOn) :
            new ObjectParameter("CreatedOn", typeof(int));


        var createdByParameter = createdBy.HasValue ?
            new ObjectParameter("CreatedBy", createdBy) :
            new ObjectParameter("CreatedBy", typeof(int));


        var activeParameter = active.HasValue ?
            new ObjectParameter("Active", active) :
            new ObjectParameter("Active", typeof(bool));


        var deletedParameter = deleted.HasValue ?
            new ObjectParameter("Deleted", deleted) :
            new ObjectParameter("Deleted", typeof(System.DateTime));


        var updatedOnParameter = updatedOn.HasValue ?
            new ObjectParameter("UpdatedOn", updatedOn) :
            new ObjectParameter("UpdatedOn", typeof(System.DateTime));


        var updatedByParameter = updatedBy.HasValue ?
            new ObjectParameter("UpdatedBy", updatedBy) :
            new ObjectParameter("UpdatedBy", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Sp_insertUpdateTypeOfEmp_Test", idParameter, typeParameter, companyIdParameter, createdOnParameter, createdByParameter, activeParameter, deletedParameter, updatedOnParameter, updatedByParameter);
    }


    public virtual int Sp_InsertUsertbl(Nullable<int> userID, Nullable<int> companyID, string userName, string passsword, Nullable<int> roleID, string lastName, Nullable<bool> active, Nullable<System.DateTime> createdDate, string email, string firstName, Nullable<System.DateTime> createdOn, Nullable<int> createdBy, Nullable<System.DateTime> deleted, Nullable<System.DateTime> updatedOn, Nullable<int> updatedBy)
    {

        var userIDParameter = userID.HasValue ?
            new ObjectParameter("UserID", userID) :
            new ObjectParameter("UserID", typeof(int));


        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        var userNameParameter = userName != null ?
            new ObjectParameter("UserName", userName) :
            new ObjectParameter("UserName", typeof(string));


        var passswordParameter = passsword != null ?
            new ObjectParameter("Passsword", passsword) :
            new ObjectParameter("Passsword", typeof(string));


        var roleIDParameter = roleID.HasValue ?
            new ObjectParameter("RoleID", roleID) :
            new ObjectParameter("RoleID", typeof(int));


        var lastNameParameter = lastName != null ?
            new ObjectParameter("LastName", lastName) :
            new ObjectParameter("LastName", typeof(string));


        var activeParameter = active.HasValue ?
            new ObjectParameter("Active", active) :
            new ObjectParameter("Active", typeof(bool));


        var createdDateParameter = createdDate.HasValue ?
            new ObjectParameter("CreatedDate", createdDate) :
            new ObjectParameter("CreatedDate", typeof(System.DateTime));


        var emailParameter = email != null ?
            new ObjectParameter("Email", email) :
            new ObjectParameter("Email", typeof(string));


        var firstNameParameter = firstName != null ?
            new ObjectParameter("FirstName", firstName) :
            new ObjectParameter("FirstName", typeof(string));


        var createdOnParameter = createdOn.HasValue ?
            new ObjectParameter("CreatedOn", createdOn) :
            new ObjectParameter("CreatedOn", typeof(System.DateTime));


        var createdByParameter = createdBy.HasValue ?
            new ObjectParameter("CreatedBy", createdBy) :
            new ObjectParameter("CreatedBy", typeof(int));


        var deletedParameter = deleted.HasValue ?
            new ObjectParameter("Deleted", deleted) :
            new ObjectParameter("Deleted", typeof(System.DateTime));


        var updatedOnParameter = updatedOn.HasValue ?
            new ObjectParameter("UpdatedOn", updatedOn) :
            new ObjectParameter("UpdatedOn", typeof(System.DateTime));


        var updatedByParameter = updatedBy.HasValue ?
            new ObjectParameter("UpdatedBy", updatedBy) :
            new ObjectParameter("UpdatedBy", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_InsertUsertbl", userIDParameter, companyIDParameter, userNameParameter, passswordParameter, roleIDParameter, lastNameParameter, activeParameter, createdDateParameter, emailParameter, firstNameParameter, createdOnParameter, createdByParameter, deletedParameter, updatedOnParameter, updatedByParameter);
    }


    public virtual ObjectResult<Sp_LoginFromEmp_Result> Sp_LoginFromEmp(string userName, string password)
    {

        var userNameParameter = userName != null ?
            new ObjectParameter("UserName", userName) :
            new ObjectParameter("UserName", typeof(string));


        var passwordParameter = password != null ?
            new ObjectParameter("Password", password) :
            new ObjectParameter("Password", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_LoginFromEmp_Result>("Sp_LoginFromEmp", userNameParameter, passwordParameter);
    }


    public virtual int sp_TypeOfEmployeeId(Nullable<int> id)
    {

        var idParameter = id.HasValue ?
            new ObjectParameter("Id", id) :
            new ObjectParameter("Id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_TypeOfEmployeeId", idParameter);
    }


    public virtual ObjectResult<sp_TypeOfEmployeeIds_Result> sp_TypeOfEmployeeIds(Nullable<int> id)
    {

        var idParameter = id.HasValue ?
            new ObjectParameter("Id", id) :
            new ObjectParameter("Id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_TypeOfEmployeeIds_Result>("sp_TypeOfEmployeeIds", idParameter);
    }


    public virtual int Sp_UpdateUser(Nullable<int> userID, Nullable<int> companyID, string userName, string passsword, Nullable<int> roleID, string lastName, Nullable<bool> active, Nullable<System.DateTime> createdDate, string email, string firstName, Nullable<System.DateTime> createdOn, Nullable<int> createdBy, Nullable<System.DateTime> deleted, Nullable<System.DateTime> updatedOn, Nullable<int> updatedBy)
    {

        var userIDParameter = userID.HasValue ?
            new ObjectParameter("UserID", userID) :
            new ObjectParameter("UserID", typeof(int));


        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        var userNameParameter = userName != null ?
            new ObjectParameter("UserName", userName) :
            new ObjectParameter("UserName", typeof(string));


        var passswordParameter = passsword != null ?
            new ObjectParameter("Passsword", passsword) :
            new ObjectParameter("Passsword", typeof(string));


        var roleIDParameter = roleID.HasValue ?
            new ObjectParameter("RoleID", roleID) :
            new ObjectParameter("RoleID", typeof(int));


        var lastNameParameter = lastName != null ?
            new ObjectParameter("LastName", lastName) :
            new ObjectParameter("LastName", typeof(string));


        var activeParameter = active.HasValue ?
            new ObjectParameter("Active", active) :
            new ObjectParameter("Active", typeof(bool));


        var createdDateParameter = createdDate.HasValue ?
            new ObjectParameter("CreatedDate", createdDate) :
            new ObjectParameter("CreatedDate", typeof(System.DateTime));


        var emailParameter = email != null ?
            new ObjectParameter("Email", email) :
            new ObjectParameter("Email", typeof(string));


        var firstNameParameter = firstName != null ?
            new ObjectParameter("FirstName", firstName) :
            new ObjectParameter("FirstName", typeof(string));


        var createdOnParameter = createdOn.HasValue ?
            new ObjectParameter("CreatedOn", createdOn) :
            new ObjectParameter("CreatedOn", typeof(System.DateTime));


        var createdByParameter = createdBy.HasValue ?
            new ObjectParameter("CreatedBy", createdBy) :
            new ObjectParameter("CreatedBy", typeof(int));


        var deletedParameter = deleted.HasValue ?
            new ObjectParameter("Deleted", deleted) :
            new ObjectParameter("Deleted", typeof(System.DateTime));


        var updatedOnParameter = updatedOn.HasValue ?
            new ObjectParameter("UpdatedOn", updatedOn) :
            new ObjectParameter("UpdatedOn", typeof(System.DateTime));


        var updatedByParameter = updatedBy.HasValue ?
            new ObjectParameter("UpdatedBy", updatedBy) :
            new ObjectParameter("UpdatedBy", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_UpdateUser", userIDParameter, companyIDParameter, userNameParameter, passswordParameter, roleIDParameter, lastNameParameter, activeParameter, createdDateParameter, emailParameter, firstNameParameter, createdOnParameter, createdByParameter, deletedParameter, updatedOnParameter, updatedByParameter);
    }


    public virtual ObjectResult<SP_VT_CRUD_Create_Result> SP_VT_CRUD_Create(string databaseName, string tblName, Nullable<byte> executionMode, Nullable<bool> dropExistingProcedures, Nullable<bool> outputIndentityCalcFields, string tablePrefix, string procPrefix, string suffixSelect, string suffixUpdate, string suffixDelete, string suffixInsert)
    {

        var databaseNameParameter = databaseName != null ?
            new ObjectParameter("DatabaseName", databaseName) :
            new ObjectParameter("DatabaseName", typeof(string));


        var tblNameParameter = tblName != null ?
            new ObjectParameter("tblName", tblName) :
            new ObjectParameter("tblName", typeof(string));


        var executionModeParameter = executionMode.HasValue ?
            new ObjectParameter("executionMode", executionMode) :
            new ObjectParameter("executionMode", typeof(byte));


        var dropExistingProceduresParameter = dropExistingProcedures.HasValue ?
            new ObjectParameter("dropExistingProcedures", dropExistingProcedures) :
            new ObjectParameter("dropExistingProcedures", typeof(bool));


        var outputIndentityCalcFieldsParameter = outputIndentityCalcFields.HasValue ?
            new ObjectParameter("outputIndentityCalcFields", outputIndentityCalcFields) :
            new ObjectParameter("outputIndentityCalcFields", typeof(bool));


        var tablePrefixParameter = tablePrefix != null ?
            new ObjectParameter("TablePrefix", tablePrefix) :
            new ObjectParameter("TablePrefix", typeof(string));


        var procPrefixParameter = procPrefix != null ?
            new ObjectParameter("procPrefix", procPrefix) :
            new ObjectParameter("procPrefix", typeof(string));


        var suffixSelectParameter = suffixSelect != null ?
            new ObjectParameter("suffixSelect", suffixSelect) :
            new ObjectParameter("suffixSelect", typeof(string));


        var suffixUpdateParameter = suffixUpdate != null ?
            new ObjectParameter("suffixUpdate", suffixUpdate) :
            new ObjectParameter("suffixUpdate", typeof(string));


        var suffixDeleteParameter = suffixDelete != null ?
            new ObjectParameter("suffixDelete", suffixDelete) :
            new ObjectParameter("suffixDelete", typeof(string));


        var suffixInsertParameter = suffixInsert != null ?
            new ObjectParameter("suffixInsert", suffixInsert) :
            new ObjectParameter("suffixInsert", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_VT_CRUD_Create_Result>("SP_VT_CRUD_Create", databaseNameParameter, tblNameParameter, executionModeParameter, dropExistingProceduresParameter, outputIndentityCalcFieldsParameter, tablePrefixParameter, procPrefixParameter, suffixSelectParameter, suffixUpdateParameter, suffixDeleteParameter, suffixInsertParameter);
    }


    public virtual ObjectResult<Nullable<int>> UpdateUserByID(Nullable<int> userID, string userName, string passsword, string firstName, string lastName, Nullable<int> roleID, Nullable<int> companyID, string email, Nullable<System.DateTime> modifiedOn, Nullable<int> modifiedBy, Nullable<bool> active)
    {

        var userIDParameter = userID.HasValue ?
            new ObjectParameter("UserID", userID) :
            new ObjectParameter("UserID", typeof(int));


        var userNameParameter = userName != null ?
            new ObjectParameter("UserName", userName) :
            new ObjectParameter("UserName", typeof(string));


        var passswordParameter = passsword != null ?
            new ObjectParameter("Passsword", passsword) :
            new ObjectParameter("Passsword", typeof(string));


        var firstNameParameter = firstName != null ?
            new ObjectParameter("FirstName", firstName) :
            new ObjectParameter("FirstName", typeof(string));


        var lastNameParameter = lastName != null ?
            new ObjectParameter("LastName", lastName) :
            new ObjectParameter("LastName", typeof(string));


        var roleIDParameter = roleID.HasValue ?
            new ObjectParameter("RoleID", roleID) :
            new ObjectParameter("RoleID", typeof(int));


        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        var emailParameter = email != null ?
            new ObjectParameter("Email", email) :
            new ObjectParameter("Email", typeof(string));


        var modifiedOnParameter = modifiedOn.HasValue ?
            new ObjectParameter("ModifiedOn", modifiedOn) :
            new ObjectParameter("ModifiedOn", typeof(System.DateTime));


        var modifiedByParameter = modifiedBy.HasValue ?
            new ObjectParameter("ModifiedBy", modifiedBy) :
            new ObjectParameter("ModifiedBy", typeof(int));


        var activeParameter = active.HasValue ?
            new ObjectParameter("Active", active) :
            new ObjectParameter("Active", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("UpdateUserByID", userIDParameter, userNameParameter, passswordParameter, firstNameParameter, lastNameParameter, roleIDParameter, companyIDParameter, emailParameter, modifiedOnParameter, modifiedByParameter, activeParameter);
    }


    public virtual ObjectResult<VT_FLGL_GetMonthSalary_Result> VT_FLGL_GetMonthSalary()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VT_FLGL_GetMonthSalary_Result>("VT_FLGL_GetMonthSalary");
    }


    public virtual ObjectResult<vt_sp_BindBonus_Result> vt_sp_BindBonus(Nullable<int> companyID)
    {

        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<vt_sp_BindBonus_Result>("vt_sp_BindBonus", companyIDParameter);
    }


    public virtual int VT_SP_CalculateSalaryTax(Nullable<decimal> monthlySalary)
    {

        var monthlySalaryParameter = monthlySalary.HasValue ?
            new ObjectParameter("MonthlySalary", monthlySalary) :
            new ObjectParameter("MonthlySalary", typeof(decimal));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("VT_SP_CalculateSalaryTax", monthlySalaryParameter);
    }


    public virtual ObjectResult<Nullable<int>> vt_sp_CreateStaffBonus(Nullable<int> iD, Nullable<int> bonusId, Nullable<System.DateTime> month, Nullable<int> createdBy, Nullable<System.DateTime> createdOn, Nullable<bool> isActive, Nullable<int> companyID)
    {

        var iDParameter = iD.HasValue ?
            new ObjectParameter("ID", iD) :
            new ObjectParameter("ID", typeof(int));


        var bonusIdParameter = bonusId.HasValue ?
            new ObjectParameter("BonusId", bonusId) :
            new ObjectParameter("BonusId", typeof(int));


        var monthParameter = month.HasValue ?
            new ObjectParameter("Month", month) :
            new ObjectParameter("Month", typeof(System.DateTime));


        var createdByParameter = createdBy.HasValue ?
            new ObjectParameter("CreatedBy", createdBy) :
            new ObjectParameter("CreatedBy", typeof(int));


        var createdOnParameter = createdOn.HasValue ?
            new ObjectParameter("CreatedOn", createdOn) :
            new ObjectParameter("CreatedOn", typeof(System.DateTime));


        var isActiveParameter = isActive.HasValue ?
            new ObjectParameter("IsActive", isActive) :
            new ObjectParameter("IsActive", typeof(bool));


        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("vt_sp_CreateStaffBonus", iDParameter, bonusIdParameter, monthParameter, createdByParameter, createdOnParameter, isActiveParameter, companyIDParameter);
    }


    public virtual ObjectResult<Nullable<System.DateTime>> VT_SP_CreateWorkingCalendar()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("VT_SP_CreateWorkingCalendar");
    }


    public virtual ObjectResult<Nullable<System.DateTime>> VT_SP_CreateWorkingCalendarOnCompanyCreate(Nullable<int> companyID)
    {

        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("VT_SP_CreateWorkingCalendarOnCompanyCreate", companyIDParameter);
    }


    public virtual ObjectResult<VT_SP_GetAttandance_Result> VT_SP_GetAttandance(Nullable<System.DateTime> attendanceDate)
    {

        var attendanceDateParameter = attendanceDate.HasValue ?
            new ObjectParameter("AttendanceDate", attendanceDate) :
            new ObjectParameter("AttendanceDate", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VT_SP_GetAttandance_Result>("VT_SP_GetAttandance", attendanceDateParameter);
    }


    public virtual ObjectResult<VT_SP_GetBanks_Result> VT_SP_GetBanks(Nullable<int> companyID)
    {

        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VT_SP_GetBanks_Result>("VT_SP_GetBanks", companyIDParameter);
    }


    public virtual ObjectResult<VT_SP_GetBranches_Result> VT_SP_GetBranches(Nullable<int> companyID)
    {

        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VT_SP_GetBranches_Result>("VT_SP_GetBranches", companyIDParameter);
    }


    public virtual ObjectResult<VT_SP_GetCategories_Result> VT_SP_GetCategories(Nullable<int> companyID)
    {

        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VT_SP_GetCategories_Result>("VT_SP_GetCategories", companyIDParameter);
    }


    public virtual ObjectResult<VT_SP_GetCOFFApplications_Result> VT_SP_GetCOFFApplications(Nullable<int> companyID)
    {

        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VT_SP_GetCOFFApplications_Result>("VT_SP_GetCOFFApplications", companyIDParameter);
    }


    public virtual ObjectResult<vt_sp_GetCompanies_Result> vt_sp_GetCompanies()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<vt_sp_GetCompanies_Result>("vt_sp_GetCompanies");
    }


    public virtual ObjectResult<VT_SP_GetCompanyEmployeeAttandance_Result> VT_SP_GetCompanyEmployeeAttandance(Nullable<int> companyID, Nullable<System.DateTime> attendancedate)
    {

        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        var attendancedateParameter = attendancedate.HasValue ?
            new ObjectParameter("attendancedate", attendancedate) :
            new ObjectParameter("attendancedate", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VT_SP_GetCompanyEmployeeAttandance_Result>("VT_SP_GetCompanyEmployeeAttandance", companyIDParameter, attendancedateParameter);
    }


    public virtual ObjectResult<VT_SP_GetCompanySalaryDetail_Result> VT_SP_GetCompanySalaryDetail()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VT_SP_GetCompanySalaryDetail_Result>("VT_SP_GetCompanySalaryDetail");
    }


    public virtual ObjectResult<VT_SP_GetDatabaseDevices_Result> VT_SP_GetDatabaseDevices(Nullable<int> companyID)
    {

        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VT_SP_GetDatabaseDevices_Result>("VT_SP_GetDatabaseDevices", companyIDParameter);
    }


    public virtual ObjectResult<VT_SP_GetDepartment_ByCompanyID_Result> VT_SP_GetDepartment_ByCompanyID(Nullable<int> companyID)
    {

        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VT_SP_GetDepartment_ByCompanyID_Result>("VT_SP_GetDepartment_ByCompanyID", companyIDParameter);
    }


    public virtual ObjectResult<VT_SP_Getdesignation_ByCompanyID_Result> VT_SP_Getdesignation_ByCompanyID(Nullable<int> companyID)
    {

        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VT_SP_Getdesignation_ByCompanyID_Result>("VT_SP_Getdesignation_ByCompanyID", companyIDParameter);
    }


    public virtual ObjectResult<VT_SP_GetDevices_Result> VT_SP_GetDevices(Nullable<int> companyID)
    {

        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VT_SP_GetDevices_Result>("VT_SP_GetDevices", companyIDParameter);
    }


    public virtual ObjectResult<VT_SP_GetEmailSetting_Result> VT_SP_GetEmailSetting(Nullable<int> companyID)
    {

        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VT_SP_GetEmailSetting_Result>("VT_SP_GetEmailSetting", companyIDParameter);
    }


    public virtual ObjectResult<VT_SP_GetEmpAttendanceReport_Result> VT_SP_GetEmpAttendanceReport(Nullable<System.DateTime> currentMonthDate, Nullable<int> companyID, Nullable<int> employeeID)
    {

        var currentMonthDateParameter = currentMonthDate.HasValue ?
            new ObjectParameter("currentMonthDate", currentMonthDate) :
            new ObjectParameter("currentMonthDate", typeof(System.DateTime));


        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        var employeeIDParameter = employeeID.HasValue ?
            new ObjectParameter("EmployeeID", employeeID) :
            new ObjectParameter("EmployeeID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VT_SP_GetEmpAttendanceReport_Result>("VT_SP_GetEmpAttendanceReport", currentMonthDateParameter, companyIDParameter, employeeIDParameter);
    }


    public virtual ObjectResult<Vt_Sp_GetEmpDepart_Result> Vt_Sp_GetEmpDepart(string deptID, string empID)
    {

        var deptIDParameter = deptID != null ?
            new ObjectParameter("DeptID", deptID) :
            new ObjectParameter("DeptID", typeof(string));


        var empIDParameter = empID != null ?
            new ObjectParameter("EmpID", empID) :
            new ObjectParameter("EmpID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Vt_Sp_GetEmpDepart_Result>("Vt_Sp_GetEmpDepart", deptIDParameter, empIDParameter);
    }


    public virtual ObjectResult<VT_SP_GetEmployeeAdvanceSalaries_Result> VT_SP_GetEmployeeAdvanceSalaries(Nullable<int> companyID)
    {

        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VT_SP_GetEmployeeAdvanceSalaries_Result>("VT_SP_GetEmployeeAdvanceSalaries", companyIDParameter);
    }


    public virtual ObjectResult<VT_SP_GetEmployeeContract_Result> VT_SP_GetEmployeeContract()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VT_SP_GetEmployeeContract_Result>("VT_SP_GetEmployeeContract");
    }


    public virtual ObjectResult<Nullable<int>> VT_SP_GetEmployeeLoan(Nullable<int> companyID, Nullable<int> enrollID)
    {

        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        var enrollIDParameter = enrollID.HasValue ?
            new ObjectParameter("EnrollID", enrollID) :
            new ObjectParameter("EnrollID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("VT_SP_GetEmployeeLoan", companyIDParameter, enrollIDParameter);
    }


    public virtual ObjectResult<VT_SP_GetEmpSalary_Slip_Result> VT_SP_GetEmpSalary_Slip(Nullable<System.DateTime> currentMonthDate, Nullable<int> companyID, Nullable<int> employeeID)
    {

        var currentMonthDateParameter = currentMonthDate.HasValue ?
            new ObjectParameter("currentMonthDate", currentMonthDate) :
            new ObjectParameter("currentMonthDate", typeof(System.DateTime));


        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        var employeeIDParameter = employeeID.HasValue ?
            new ObjectParameter("EmployeeID", employeeID) :
            new ObjectParameter("EmployeeID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VT_SP_GetEmpSalary_Slip_Result>("VT_SP_GetEmpSalary_Slip", currentMonthDateParameter, companyIDParameter, employeeIDParameter);
    }


    public virtual ObjectResult<VT_SP_GetEOBISettings_Result> VT_SP_GetEOBISettings(Nullable<int> companyID)
    {

        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VT_SP_GetEOBISettings_Result>("VT_SP_GetEOBISettings", companyIDParameter);
    }


    public virtual ObjectResult<VT_SP_GetGatePassEntries_Result> VT_SP_GetGatePassEntries(Nullable<int> companyID)
    {

        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VT_SP_GetGatePassEntries_Result>("VT_SP_GetGatePassEntries", companyIDParameter);
    }


    public virtual ObjectResult<VT_SP_GetLeaveYear_Result> VT_SP_GetLeaveYear(Nullable<int> companyID)
    {

        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VT_SP_GetLeaveYear_Result>("VT_SP_GetLeaveYear", companyIDParameter);
    }


    public virtual int VT_SP_GetLoanEmployees(Nullable<int> companyID)
    {

        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("VT_SP_GetLoanEmployees", companyIDParameter);
    }


    public virtual ObjectResult<VT_SP_GetLoanEntry_Result> VT_SP_GetLoanEntry(Nullable<int> companyID, Nullable<int> employeeID, Nullable<int> roleID)
    {

        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        var employeeIDParameter = employeeID.HasValue ?
            new ObjectParameter("EmployeeID", employeeID) :
            new ObjectParameter("EmployeeID", typeof(int));


        var roleIDParameter = roleID.HasValue ?
            new ObjectParameter("RoleID", roleID) :
            new ObjectParameter("RoleID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VT_SP_GetLoanEntry_Result>("VT_SP_GetLoanEntry", companyIDParameter, employeeIDParameter, roleIDParameter);
    }


    public virtual ObjectResult<VT_SP_GetLoanInformation_Result> VT_SP_GetLoanInformation(Nullable<int> companyID)
    {

        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VT_SP_GetLoanInformation_Result>("VT_SP_GetLoanInformation", companyIDParameter);
    }


    public virtual ObjectResult<VT_SP_GetLoanMonthAmount_Result> VT_SP_GetLoanMonthAmount(Nullable<int> loanId, Nullable<int> enrollId, Nullable<System.DateTime> monthYear)
    {

        var loanIdParameter = loanId.HasValue ?
            new ObjectParameter("LoanId", loanId) :
            new ObjectParameter("LoanId", typeof(int));


        var enrollIdParameter = enrollId.HasValue ?
            new ObjectParameter("EnrollId", enrollId) :
            new ObjectParameter("EnrollId", typeof(int));


        var monthYearParameter = monthYear.HasValue ?
            new ObjectParameter("MonthYear", monthYear) :
            new ObjectParameter("MonthYear", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VT_SP_GetLoanMonthAmount_Result>("VT_SP_GetLoanMonthAmount", loanIdParameter, enrollIdParameter, monthYearParameter);
    }


    public virtual ObjectResult<VT_SP_GetManualAttendance_Result> VT_SP_GetManualAttendance(Nullable<int> companyID, Nullable<int> enrollId, Nullable<int> role)
    {

        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        var enrollIdParameter = enrollId.HasValue ?
            new ObjectParameter("EnrollId", enrollId) :
            new ObjectParameter("EnrollId", typeof(int));


        var roleParameter = role.HasValue ?
            new ObjectParameter("Role", role) :
            new ObjectParameter("Role", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VT_SP_GetManualAttendance_Result>("VT_SP_GetManualAttendance", companyIDParameter, enrollIdParameter, roleParameter);
    }


    public virtual ObjectResult<VT_SP_GetOtherLeaves_Result> VT_SP_GetOtherLeaves(Nullable<int> enrollId)
    {

        var enrollIdParameter = enrollId.HasValue ?
            new ObjectParameter("EnrollId", enrollId) :
            new ObjectParameter("EnrollId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VT_SP_GetOtherLeaves_Result>("VT_SP_GetOtherLeaves", enrollIdParameter);
    }


    public virtual ObjectResult<VT_SP_GetPFSettings_Result> VT_SP_GetPFSettings(Nullable<int> companyID)
    {

        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VT_SP_GetPFSettings_Result>("VT_SP_GetPFSettings", companyIDParameter);
    }


    public virtual ObjectResult<VT_SP_GetPTSettings_Result> VT_SP_GetPTSettings(Nullable<int> companyID)
    {

        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VT_SP_GetPTSettings_Result>("VT_SP_GetPTSettings", companyIDParameter);
    }


    public virtual ObjectResult<VT_SP_GetReportSalaries_Result> VT_SP_GetReportSalaries(Nullable<System.DateTime> currentMonthDate, Nullable<int> companyID)
    {

        var currentMonthDateParameter = currentMonthDate.HasValue ?
            new ObjectParameter("currentMonthDate", currentMonthDate) :
            new ObjectParameter("currentMonthDate", typeof(System.DateTime));


        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VT_SP_GetReportSalaries_Result>("VT_SP_GetReportSalaries", currentMonthDateParameter, companyIDParameter);
    }


    public virtual ObjectResult<VT_SP_GetRoles_Result> VT_SP_GetRoles(Nullable<int> roleID)
    {

        var roleIDParameter = roleID.HasValue ?
            new ObjectParameter("RoleID", roleID) :
            new ObjectParameter("RoleID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VT_SP_GetRoles_Result>("VT_SP_GetRoles", roleIDParameter);
    }


    public virtual ObjectResult<VT_SP_GetSalaryHead_Result> VT_SP_GetSalaryHead(Nullable<int> companyID)
    {

        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VT_SP_GetSalaryHead_Result>("VT_SP_GetSalaryHead", companyIDParameter);
    }


    public virtual ObjectResult<vt_sp_GetSalaryType_Result> vt_sp_GetSalaryType()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<vt_sp_GetSalaryType_Result>("vt_sp_GetSalaryType");
    }


    public virtual ObjectResult<VT_SP_GetSettings_Result> VT_SP_GetSettings(Nullable<int> companyID)
    {

        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VT_SP_GetSettings_Result>("VT_SP_GetSettings", companyIDParameter);
    }


    public virtual ObjectResult<VT_SP_GetShift_Result> VT_SP_GetShift(Nullable<int> companyID)
    {

        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VT_SP_GetShift_Result>("VT_SP_GetShift", companyIDParameter);
    }


    public virtual ObjectResult<VT_SP_GetShiftAllotments_Result> VT_SP_GetShiftAllotments(Nullable<int> companyID)
    {

        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VT_SP_GetShiftAllotments_Result>("VT_SP_GetShiftAllotments", companyIDParameter);
    }


    public virtual int VT_SP_GetSortedEmployeeData(string orderByClause)
    {

        var orderByClauseParameter = orderByClause != null ?
            new ObjectParameter("OrderByClause", orderByClause) :
            new ObjectParameter("OrderByClause", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("VT_SP_GetSortedEmployeeData", orderByClauseParameter);
    }


    public virtual int VT_SP_GetTaxAmt(Nullable<decimal> monthlyAmt)
    {

        var monthlyAmtParameter = monthlyAmt.HasValue ?
            new ObjectParameter("MonthlyAmt", monthlyAmt) :
            new ObjectParameter("MonthlyAmt", typeof(decimal));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("VT_SP_GetTaxAmt", monthlyAmtParameter);
    }


    public virtual ObjectResult<Nullable<decimal>> VT_SP_getTotalLoanInstall(Nullable<int> companyID, Nullable<int> employeeID, Nullable<int> loanID, Nullable<int> lMAID)
    {

        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        var employeeIDParameter = employeeID.HasValue ?
            new ObjectParameter("EmployeeID", employeeID) :
            new ObjectParameter("EmployeeID", typeof(int));


        var loanIDParameter = loanID.HasValue ?
            new ObjectParameter("LoanID", loanID) :
            new ObjectParameter("LoanID", typeof(int));


        var lMAIDParameter = lMAID.HasValue ?
            new ObjectParameter("LMAID", lMAID) :
            new ObjectParameter("LMAID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("VT_SP_getTotalLoanInstall", companyIDParameter, employeeIDParameter, loanIDParameter, lMAIDParameter);
    }


    public virtual ObjectResult<vt_sp_GetType_Result> vt_sp_GetType()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<vt_sp_GetType_Result>("vt_sp_GetType");
    }


    public virtual ObjectResult<VT_SP_GetUser_Result> VT_SP_GetUser(Nullable<int> companyID)
    {

        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VT_SP_GetUser_Result>("VT_SP_GetUser", companyIDParameter);
    }


    public virtual int VT_SP_InsertLeaveAllotment(Nullable<int> companyID, Nullable<int> leaveID, string allotment)
    {

        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        var leaveIDParameter = leaveID.HasValue ?
            new ObjectParameter("LeaveID", leaveID) :
            new ObjectParameter("LeaveID", typeof(int));


        var allotmentParameter = allotment != null ?
            new ObjectParameter("Allotment", allotment) :
            new ObjectParameter("Allotment", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("VT_SP_InsertLeaveAllotment", companyIDParameter, leaveIDParameter, allotmentParameter);
    }


    public virtual ObjectResult<Nullable<int>> VT_SP_InsertUpdateLeaveAllotment(Nullable<int> companyID, Nullable<int> leaveID, string allotment, string isUpdate)
    {

        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        var leaveIDParameter = leaveID.HasValue ?
            new ObjectParameter("LeaveID", leaveID) :
            new ObjectParameter("LeaveID", typeof(int));


        var allotmentParameter = allotment != null ?
            new ObjectParameter("Allotment", allotment) :
            new ObjectParameter("Allotment", typeof(string));


        var isUpdateParameter = isUpdate != null ?
            new ObjectParameter("isUpdate", isUpdate) :
            new ObjectParameter("isUpdate", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("VT_SP_InsertUpdateLeaveAllotment", companyIDParameter, leaveIDParameter, allotmentParameter, isUpdateParameter);
    }


    public virtual ObjectResult<Nullable<int>> VT_SP_IsCompanyExist(Nullable<int> companyID)
    {

        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("VT_SP_IsCompanyExist", companyIDParameter);
    }


    public virtual ObjectResult<Nullable<int>> Vt_Sp_NumberOfEmployee(Nullable<int> comID)
    {

        var comIDParameter = comID.HasValue ?
            new ObjectParameter("comID", comID) :
            new ObjectParameter("comID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Vt_Sp_NumberOfEmployee", comIDParameter);
    }


    public virtual ObjectResult<string> VT_SP_SetEmpSalaries(Nullable<System.DateTime> currentMonthDate, Nullable<int> companyID, Nullable<int> createdBy, Nullable<System.DateTime> createdDate)
    {

        var currentMonthDateParameter = currentMonthDate.HasValue ?
            new ObjectParameter("currentMonthDate", currentMonthDate) :
            new ObjectParameter("currentMonthDate", typeof(System.DateTime));


        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        var createdByParameter = createdBy.HasValue ?
            new ObjectParameter("CreatedBy", createdBy) :
            new ObjectParameter("CreatedBy", typeof(int));


        var createdDateParameter = createdDate.HasValue ?
            new ObjectParameter("CreatedDate", createdDate) :
            new ObjectParameter("CreatedDate", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("VT_SP_SetEmpSalaries", currentMonthDateParameter, companyIDParameter, createdByParameter, createdDateParameter);
    }


    public virtual int VT_SP_UpdateCurrentMonthLoanInstallment(Nullable<int> companyID, Nullable<int> employeeID, Nullable<int> lMAID, string installmentAMT)
    {

        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        var employeeIDParameter = employeeID.HasValue ?
            new ObjectParameter("EmployeeID", employeeID) :
            new ObjectParameter("EmployeeID", typeof(int));


        var lMAIDParameter = lMAID.HasValue ?
            new ObjectParameter("LMAID", lMAID) :
            new ObjectParameter("LMAID", typeof(int));


        var installmentAMTParameter = installmentAMT != null ?
            new ObjectParameter("InstallmentAMT", installmentAMT) :
            new ObjectParameter("InstallmentAMT", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("VT_SP_UpdateCurrentMonthLoanInstallment", companyIDParameter, employeeIDParameter, lMAIDParameter, installmentAMTParameter);
    }


    public virtual int VT_SP_UpdateLeaveAllotment(Nullable<int> companyID, Nullable<int> leaveID, string allotment)
    {

        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        var leaveIDParameter = leaveID.HasValue ?
            new ObjectParameter("LeaveID", leaveID) :
            new ObjectParameter("LeaveID", typeof(int));


        var allotmentParameter = allotment != null ?
            new ObjectParameter("Allotment", allotment) :
            new ObjectParameter("Allotment", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("VT_SP_UpdateLeaveAllotment", companyIDParameter, leaveIDParameter, allotmentParameter);
    }


    public virtual int VT_SP_UpdateLoanInstallment(Nullable<int> companyID, Nullable<int> employeeID, Nullable<int> lMAID, string installmentAMT)
    {

        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        var employeeIDParameter = employeeID.HasValue ?
            new ObjectParameter("EmployeeID", employeeID) :
            new ObjectParameter("EmployeeID", typeof(int));


        var lMAIDParameter = lMAID.HasValue ?
            new ObjectParameter("LMAID", lMAID) :
            new ObjectParameter("LMAID", typeof(int));


        var installmentAMTParameter = installmentAMT != null ?
            new ObjectParameter("InstallmentAMT", installmentAMT) :
            new ObjectParameter("InstallmentAMT", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("VT_SP_UpdateLoanInstallment", companyIDParameter, employeeIDParameter, lMAIDParameter, installmentAMTParameter);
    }


    public virtual ObjectResult<GetAllCompanies_Result> GetAllCompanies()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllCompanies_Result>("GetAllCompanies");
    }


    public virtual ObjectResult<getdeptbyComID_Result> getdeptbyComID(Nullable<int> companyID)
    {

        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getdeptbyComID_Result>("getdeptbyComID", companyIDParameter);
    }


    public virtual ObjectResult<vt_sp_GetComapanyID_ByCompanyName_Result> vt_sp_GetComapanyID_ByCompanyName(string companyName)
    {

        var companyNameParameter = companyName != null ?
            new ObjectParameter("CompanyName", companyName) :
            new ObjectParameter("CompanyName", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<vt_sp_GetComapanyID_ByCompanyName_Result>("vt_sp_GetComapanyID_ByCompanyName", companyNameParameter);
    }


    public virtual ObjectResult<Vt_Sp_GetCompanyID_By_CompanyName_Result> Vt_Sp_GetCompanyID_By_CompanyName(string companyName)
    {

        var companyNameParameter = companyName != null ?
            new ObjectParameter("CompanyName", companyName) :
            new ObjectParameter("CompanyName", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Vt_Sp_GetCompanyID_By_CompanyName_Result>("Vt_Sp_GetCompanyID_By_CompanyName", companyNameParameter);
    }


    public virtual ObjectResult<VT_SP_GetDesignation_By_DepartmentID_Result> VT_SP_GetDesignation_By_DepartmentID(Nullable<int> departmentID, Nullable<int> companyID)
    {

        var departmentIDParameter = departmentID.HasValue ?
            new ObjectParameter("DepartmentID", departmentID) :
            new ObjectParameter("DepartmentID", typeof(int));


        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VT_SP_GetDesignation_By_DepartmentID_Result>("VT_SP_GetDesignation_By_DepartmentID", departmentIDParameter, companyIDParameter);
    }


    public virtual ObjectResult<VT_SP_GetTax_Result> VT_SP_GetTax(Nullable<int> companyID)
    {

        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VT_SP_GetTax_Result>("VT_SP_GetTax", companyIDParameter);
    }


    public virtual ObjectResult<VT_SP_GetLeaveApplications_Result> VT_SP_GetLeaveApplications(Nullable<int> companyID, Nullable<int> employeeID)
    {

        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        var employeeIDParameter = employeeID.HasValue ?
            new ObjectParameter("EmployeeID", employeeID) :
            new ObjectParameter("EmployeeID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VT_SP_GetLeaveApplications_Result>("VT_SP_GetLeaveApplications", companyIDParameter, employeeIDParameter);
    }


    public virtual ObjectResult<VT_SP_GetDesignation_Result> VT_SP_GetDesignation(Nullable<int> companyID)
    {

        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VT_SP_GetDesignation_Result>("VT_SP_GetDesignation", companyIDParameter);
    }


    public virtual ObjectResult<VT_SP_GetEmpSalaries_New_Result> VT_SP_GetEmpSalaries_New(Nullable<System.DateTime> currentMonthDate, Nullable<int> companyID)
    {

        var currentMonthDateParameter = currentMonthDate.HasValue ?
            new ObjectParameter("currentMonthDate", currentMonthDate) :
            new ObjectParameter("currentMonthDate", typeof(System.DateTime));


        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VT_SP_GetEmpSalaries_New_Result>("VT_SP_GetEmpSalaries_New", currentMonthDateParameter, companyIDParameter);
    }


    public virtual ObjectResult<VT_SP_GetEmpSalaries_Result> VT_SP_GetEmpSalaries(Nullable<System.DateTime> currentMonthDate, Nullable<int> companyID)
    {

        var currentMonthDateParameter = currentMonthDate.HasValue ?
            new ObjectParameter("currentMonthDate", currentMonthDate) :
            new ObjectParameter("currentMonthDate", typeof(System.DateTime));


        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VT_SP_GetEmpSalaries_Result>("VT_SP_GetEmpSalaries", currentMonthDateParameter, companyIDParameter);
    }


    public virtual ObjectResult<Vt_Sp_GetEmployeeID_By_EmployeeName_AND_CompanyID_Result> Vt_Sp_GetEmployeeID_By_EmployeeName_AND_CompanyID(Nullable<int> companyID)
    {

        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Vt_Sp_GetEmployeeID_By_EmployeeName_AND_CompanyID_Result>("Vt_Sp_GetEmployeeID_By_EmployeeName_AND_CompanyID", companyIDParameter);
    }


    public virtual ObjectResult<sp_GetMenuByUserNew_Result> sp_GetMenuByUserNew(Nullable<int> moduleId, Nullable<int> roleId)
    {

        var moduleIdParameter = moduleId.HasValue ?
            new ObjectParameter("ModuleId", moduleId) :
            new ObjectParameter("ModuleId", typeof(int));


        var roleIdParameter = roleId.HasValue ?
            new ObjectParameter("RoleId", roleId) :
            new ObjectParameter("RoleId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetMenuByUserNew_Result>("sp_GetMenuByUserNew", moduleIdParameter, roleIdParameter);
    }


    public virtual ObjectResult<Sp_Get_Employee_TransferLog_Result> Sp_Get_Employee_TransferLog()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Employee_TransferLog_Result>("Sp_Get_Employee_TransferLog");
    }


    public virtual ObjectResult<Vt_Sp_Employee_Qualifications_Result> Vt_Sp_Employee_Qualifications(Nullable<int> employeeID, Nullable<int> qualificationType)
    {

        var employeeIDParameter = employeeID.HasValue ?
            new ObjectParameter("EmployeeID", employeeID) :
            new ObjectParameter("EmployeeID", typeof(int));


        var qualificationTypeParameter = qualificationType.HasValue ?
            new ObjectParameter("QualificationType", qualificationType) :
            new ObjectParameter("QualificationType", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Vt_Sp_Employee_Qualifications_Result>("Vt_Sp_Employee_Qualifications", employeeIDParameter, qualificationTypeParameter);
    }


    public virtual ObjectResult<sp_get_Tax_Result> sp_get_Tax()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_Tax_Result>("sp_get_Tax");
    }


    public virtual int Sp_Asset_QtyUpdate(Nullable<int> assetid)
    {

        var assetidParameter = assetid.HasValue ?
            new ObjectParameter("assetid", assetid) :
            new ObjectParameter("assetid", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Asset_QtyUpdate", assetidParameter);
    }


    public virtual int Sp_DeleteAsset(Nullable<int> childid, Nullable<int> parentid)
    {

        var childidParameter = childid.HasValue ?
            new ObjectParameter("childid", childid) :
            new ObjectParameter("childid", typeof(int));


        var parentidParameter = parentid.HasValue ?
            new ObjectParameter("parentid", parentid) :
            new ObjectParameter("parentid", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_DeleteAsset", childidParameter, parentidParameter);
    }


    public virtual ObjectResult<Sp_GetAllAssignedAssetEmployees_Result> Sp_GetAllAssignedAssetEmployees(Nullable<int> companyid)
    {

        var companyidParameter = companyid.HasValue ?
            new ObjectParameter("companyid", companyid) :
            new ObjectParameter("companyid", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetAllAssignedAssetEmployees_Result>("Sp_GetAllAssignedAssetEmployees", companyidParameter);
    }


    public virtual ObjectResult<Sp_GetGratuity_Result> Sp_GetGratuity(Nullable<int> companyId)
    {

        var companyIdParameter = companyId.HasValue ?
            new ObjectParameter("CompanyId", companyId) :
            new ObjectParameter("CompanyId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetGratuity_Result>("Sp_GetGratuity", companyIdParameter);
    }


    public virtual ObjectResult<Sp_GetAllAssignedGratuityEmployees_Result> Sp_GetAllAssignedGratuityEmployees(Nullable<int> companyid)
    {

        var companyidParameter = companyid.HasValue ?
            new ObjectParameter("companyid", companyid) :
            new ObjectParameter("companyid", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetAllAssignedGratuityEmployees_Result>("Sp_GetAllAssignedGratuityEmployees", companyidParameter);
    }


    public virtual ObjectResult<Sp_GetAllGratuityEmployees_Result> Sp_GetAllGratuityEmployees(Nullable<int> companyid)
    {

        var companyidParameter = companyid.HasValue ?
            new ObjectParameter("companyid", companyid) :
            new ObjectParameter("companyid", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetAllGratuityEmployees_Result>("Sp_GetAllGratuityEmployees", companyidParameter);
    }


    public virtual ObjectResult<Sp_GetAllDesignation_Result> Sp_GetAllDesignation(Nullable<int> companyid)
    {

        var companyidParameter = companyid.HasValue ?
            new ObjectParameter("companyid", companyid) :
            new ObjectParameter("companyid", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetAllDesignation_Result>("Sp_GetAllDesignation", companyidParameter);
    }


    public virtual ObjectResult<Sp_GetAllAssignedDesignationGratuity_Result> Sp_GetAllAssignedDesignationGratuity(Nullable<int> companyid)
    {

        var companyidParameter = companyid.HasValue ?
            new ObjectParameter("companyid", companyid) :
            new ObjectParameter("companyid", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetAllAssignedDesignationGratuity_Result>("Sp_GetAllAssignedDesignationGratuity", companyidParameter);
    }


    public virtual ObjectResult<vt_sp_getempdetail_forappraisal_Result> vt_sp_getempdetail_forappraisal(Nullable<int> employeeID, string year)
    {

        var employeeIDParameter = employeeID.HasValue ?
            new ObjectParameter("EmployeeID", employeeID) :
            new ObjectParameter("EmployeeID", typeof(int));


        var yearParameter = year != null ?
            new ObjectParameter("Year", year) :
            new ObjectParameter("Year", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<vt_sp_getempdetail_forappraisal_Result>("vt_sp_getempdetail_forappraisal", employeeIDParameter, yearParameter);
    }


    public virtual ObjectResult<VT_SP_GetEmpAttendanceReport_SuperAdmin_Result> VT_SP_GetEmpAttendanceReport_SuperAdmin(Nullable<System.DateTime> currentMonthDate, Nullable<int> companyID, Nullable<int> departmentID)
    {

        var currentMonthDateParameter = currentMonthDate.HasValue ?
            new ObjectParameter("currentMonthDate", currentMonthDate) :
            new ObjectParameter("currentMonthDate", typeof(System.DateTime));


        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        var departmentIDParameter = departmentID.HasValue ?
            new ObjectParameter("DepartmentID", departmentID) :
            new ObjectParameter("DepartmentID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VT_SP_GetEmpAttendanceReport_SuperAdmin_Result>("VT_SP_GetEmpAttendanceReport_SuperAdmin", currentMonthDateParameter, companyIDParameter, departmentIDParameter);
    }


    public virtual ObjectResult<Sp_GetEmployeePerformanceEvaluation_Result> Sp_GetEmployeePerformanceEvaluation(Nullable<int> employeeID, Nullable<System.DateTime> years)
    {

        var employeeIDParameter = employeeID.HasValue ?
            new ObjectParameter("EmployeeID", employeeID) :
            new ObjectParameter("EmployeeID", typeof(int));


        var yearsParameter = years.HasValue ?
            new ObjectParameter("Years", years) :
            new ObjectParameter("Years", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetEmployeePerformanceEvaluation_Result>("Sp_GetEmployeePerformanceEvaluation", employeeIDParameter, yearsParameter);
    }


    public virtual ObjectResult<vt_sp_getemployeefinechargesdetails_Result> vt_sp_getemployeefinechargesdetails(Nullable<int> employeeID)
    {

        var employeeIDParameter = employeeID.HasValue ?
            new ObjectParameter("EmployeeID", employeeID) :
            new ObjectParameter("EmployeeID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<vt_sp_getemployeefinechargesdetails_Result>("vt_sp_getemployeefinechargesdetails", employeeIDParameter);
    }


    public virtual ObjectResult<VT_SP_GetEmpSalariesBankWise_Result> VT_SP_GetEmpSalariesBankWise(Nullable<System.DateTime> currentMonthDate, Nullable<int> companyID, string bankName)
    {

        var currentMonthDateParameter = currentMonthDate.HasValue ?
            new ObjectParameter("currentMonthDate", currentMonthDate) :
            new ObjectParameter("currentMonthDate", typeof(System.DateTime));


        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        var bankNameParameter = bankName != null ?
            new ObjectParameter("BankName", bankName) :
            new ObjectParameter("BankName", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VT_SP_GetEmpSalariesBankWise_Result>("VT_SP_GetEmpSalariesBankWise", currentMonthDateParameter, companyIDParameter, bankNameParameter);
    }


    public virtual ObjectResult<VT_SP_Get_Active_Employees_Result> VT_SP_Get_Active_Employees(Nullable<int> companyID)
    {

        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VT_SP_Get_Active_Employees_Result>("VT_SP_Get_Active_Employees", companyIDParameter);
    }


    public virtual ObjectResult<VT_SP_GetDepartment_Result> VT_SP_GetDepartment(Nullable<int> companyID)
    {

        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VT_SP_GetDepartment_Result>("VT_SP_GetDepartment", companyIDParameter);
    }


    public virtual ObjectResult<VT_SP_GetEmployees_Result> VT_SP_GetEmployees(Nullable<int> companyID)
    {

        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VT_SP_GetEmployees_Result>("VT_SP_GetEmployees", companyIDParameter);
    }


    public virtual ObjectResult<Vt_Sp_GetAttendance_By_CompanyID_OR_EmployeeID_Result> Vt_Sp_GetAttendance_By_CompanyID_OR_EmployeeID(Nullable<int> companyID, Nullable<int> employeeID, Nullable<System.DateTime> searchByDate)
    {

        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("companyID", companyID) :
            new ObjectParameter("companyID", typeof(int));


        var employeeIDParameter = employeeID.HasValue ?
            new ObjectParameter("employeeID", employeeID) :
            new ObjectParameter("employeeID", typeof(int));


        var searchByDateParameter = searchByDate.HasValue ?
            new ObjectParameter("SearchByDate", searchByDate) :
            new ObjectParameter("SearchByDate", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Vt_Sp_GetAttendance_By_CompanyID_OR_EmployeeID_Result>("Vt_Sp_GetAttendance_By_CompanyID_OR_EmployeeID", companyIDParameter, employeeIDParameter, searchByDateParameter);
    }


    public virtual ObjectResult<sp_GetEditQualificationDetails_Result> sp_GetEditQualificationDetails(Nullable<int> empID, Nullable<int> type)
    {

        var empIDParameter = empID.HasValue ?
            new ObjectParameter("EmpID", empID) :
            new ObjectParameter("EmpID", typeof(int));


        var typeParameter = type.HasValue ?
            new ObjectParameter("type", type) :
            new ObjectParameter("type", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetEditQualificationDetails_Result>("sp_GetEditQualificationDetails", empIDParameter, typeParameter);
    }


    public virtual ObjectResult<VT_sp_BindLineManager_Result> VT_sp_BindLineManager(Nullable<int> designationID, Nullable<int> departmentID, Nullable<int> companyID)
    {

        var designationIDParameter = designationID.HasValue ?
            new ObjectParameter("DesignationID", designationID) :
            new ObjectParameter("DesignationID", typeof(int));


        var departmentIDParameter = departmentID.HasValue ?
            new ObjectParameter("DepartmentID", departmentID) :
            new ObjectParameter("DepartmentID", typeof(int));


        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VT_sp_BindLineManager_Result>("VT_sp_BindLineManager", designationIDParameter, departmentIDParameter, companyIDParameter);
    }


    public virtual ObjectResult<GetStaffBonus_Result> GetStaffBonus(Nullable<int> companyID)
    {

        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStaffBonus_Result>("GetStaffBonus", companyIDParameter);
    }


    public virtual ObjectResult<Bind_SalaryType_Result> Bind_SalaryType()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Bind_SalaryType_Result>("Bind_SalaryType");
    }


    public virtual ObjectResult<Bind_vt_tbl_TypeofEmployee_Result> Bind_vt_tbl_TypeofEmployee()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Bind_vt_tbl_TypeofEmployee_Result>("Bind_vt_tbl_TypeofEmployee");
    }


    public virtual ObjectResult<BindGetModules_Result> BindGetModules()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BindGetModules_Result>("BindGetModules");
    }


    public virtual ObjectResult<BindLeaveApplicationToHR_Result> BindLeaveApplicationToHR(Nullable<int> companyID)
    {

        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BindLeaveApplicationToHR_Result>("BindLeaveApplicationToHR", companyIDParameter);
    }


    public virtual ObjectResult<BindLeaveApplicationToLM_Result> BindLeaveApplicationToLM(Nullable<int> managerID)
    {

        var managerIDParameter = managerID.HasValue ?
            new ObjectParameter("ManagerID", managerID) :
            new ObjectParameter("ManagerID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BindLeaveApplicationToLM_Result>("BindLeaveApplicationToLM", managerIDParameter);
    }


    public virtual ObjectResult<BindTypeOfEmployee_Result> BindTypeOfEmployee()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BindTypeOfEmployee_Result>("BindTypeOfEmployee");
    }


    public virtual ObjectResult<Employee_ChangeDesignationLogs_Result> Employee_ChangeDesignationLogs()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Employee_ChangeDesignationLogs_Result>("Employee_ChangeDesignationLogs");
    }


    public virtual ObjectResult<GetAllAssets_Result> GetAllAssets()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllAssets_Result>("GetAllAssets");
    }


    public virtual ObjectResult<GetAllEmployees_Result> GetAllEmployees(Nullable<int> companyid)
    {

        var companyidParameter = companyid.HasValue ?
            new ObjectParameter("companyid", companyid) :
            new ObjectParameter("companyid", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllEmployees_Result>("GetAllEmployees", companyidParameter);
    }


    public virtual ObjectResult<GetPermissions_Result> GetPermissions(Nullable<int> roleID, Nullable<int> moduleID)
    {

        var roleIDParameter = roleID.HasValue ?
            new ObjectParameter("RoleID", roleID) :
            new ObjectParameter("RoleID", typeof(int));


        var moduleIDParameter = moduleID.HasValue ?
            new ObjectParameter("ModuleID", moduleID) :
            new ObjectParameter("ModuleID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPermissions_Result>("GetPermissions", roleIDParameter, moduleIDParameter);
    }


    public virtual ObjectResult<string> GetUserPassword(string userName)
    {

        var userNameParameter = userName != null ?
            new ObjectParameter("UserName", userName) :
            new ObjectParameter("UserName", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetUserPassword", userNameParameter);
    }


    public virtual int Job_SP_UpdateEmployeesPromotion()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Job_SP_UpdateEmployeesPromotion");
    }


    public virtual ObjectResult<sp_ddlempolyeeeName_Result> sp_ddlempolyeeeName(Nullable<int> companyID, Nullable<int> employeeID)
    {

        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        var employeeIDParameter = employeeID.HasValue ?
            new ObjectParameter("EmployeeID", employeeID) :
            new ObjectParameter("EmployeeID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ddlempolyeeeName_Result>("sp_ddlempolyeeeName", companyIDParameter, employeeIDParameter);
    }


    public virtual int Sp_DeleteEmployeePermanent(Nullable<int> employeeId, Nullable<int> userid)
    {

        var employeeIdParameter = employeeId.HasValue ?
            new ObjectParameter("EmployeeId", employeeId) :
            new ObjectParameter("EmployeeId", typeof(int));


        var useridParameter = userid.HasValue ?
            new ObjectParameter("userid", userid) :
            new ObjectParameter("userid", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_DeleteEmployeePermanent", employeeIdParameter, useridParameter);
    }


    public virtual ObjectResult<string> SP_DeleteHolidays(string date, Nullable<int> companyID, Nullable<int> designationID, string rules)
    {

        var dateParameter = date != null ?
            new ObjectParameter("Date", date) :
            new ObjectParameter("Date", typeof(string));


        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        var designationIDParameter = designationID.HasValue ?
            new ObjectParameter("DesignationID", designationID) :
            new ObjectParameter("DesignationID", typeof(int));


        var rulesParameter = rules != null ?
            new ObjectParameter("Rules", rules) :
            new ObjectParameter("Rules", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_DeleteHolidays", dateParameter, companyIDParameter, designationIDParameter, rulesParameter);
    }


    public virtual ObjectResult<string> Sp_DeleteLoanByID(Nullable<int> iD, Nullable<int> companyID)
    {

        var iDParameter = iD.HasValue ?
            new ObjectParameter("ID", iD) :
            new ObjectParameter("ID", typeof(int));


        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Sp_DeleteLoanByID", iDParameter, companyIDParameter);
    }


    public virtual ObjectResult<Sp_Get_AllAssignedAssets_Result> Sp_Get_AllAssignedAssets(Nullable<int> empID)
    {

        var empIDParameter = empID.HasValue ?
            new ObjectParameter("EmpID", empID) :
            new ObjectParameter("EmpID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_AllAssignedAssets_Result>("Sp_Get_AllAssignedAssets", empIDParameter);
    }


    public virtual ObjectResult<Sp_Get_AssignedAssets_Result> Sp_Get_AssignedAssets()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_AssignedAssets_Result>("Sp_Get_AssignedAssets");
    }


    public virtual ObjectResult<Sp_Get_EmpAssets_Result> Sp_Get_EmpAssets(Nullable<int> empID)
    {

        var empIDParameter = empID.HasValue ?
            new ObjectParameter("EmpID", empID) :
            new ObjectParameter("EmpID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_EmpAssets_Result>("Sp_Get_EmpAssets", empIDParameter);
    }


    public virtual ObjectResult<Sp_Get_Employee_PromotionLog_Result> Sp_Get_Employee_PromotionLog()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Employee_PromotionLog_Result>("Sp_Get_Employee_PromotionLog");
    }


    public virtual ObjectResult<Sp_Get_Employee_PromotionLog_New_Result> Sp_Get_Employee_PromotionLog_New(Nullable<int> employeeID)
    {

        var employeeIDParameter = employeeID.HasValue ?
            new ObjectParameter("EmployeeID", employeeID) :
            new ObjectParameter("EmployeeID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Employee_PromotionLog_New_Result>("Sp_Get_Employee_PromotionLog_New", employeeIDParameter);
    }


    public virtual ObjectResult<Sp_Get_Employee_TransferLog1_Result> Sp_Get_Employee_TransferLog1()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Employee_TransferLog1_Result>("Sp_Get_Employee_TransferLog1");
    }


    public virtual ObjectResult<sp_get_Tax1_Result> sp_get_Tax1()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_Tax1_Result>("sp_get_Tax1");
    }


    public virtual ObjectResult<Sp_GetAllAssignedAssetEmployees1_Result> Sp_GetAllAssignedAssetEmployees1(Nullable<int> companyid)
    {

        var companyidParameter = companyid.HasValue ?
            new ObjectParameter("companyid", companyid) :
            new ObjectParameter("companyid", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetAllAssignedAssetEmployees1_Result>("Sp_GetAllAssignedAssetEmployees1", companyidParameter);
    }


    public virtual ObjectResult<Sp_GetAllAssignedGratuityEmployees1_Result> Sp_GetAllAssignedGratuityEmployees1(Nullable<int> companyid)
    {

        var companyidParameter = companyid.HasValue ?
            new ObjectParameter("companyid", companyid) :
            new ObjectParameter("companyid", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetAllAssignedGratuityEmployees1_Result>("Sp_GetAllAssignedGratuityEmployees1", companyidParameter);
    }


    public virtual ObjectResult<sp_getapproveleavefrom_Result> sp_getapproveleavefrom(Nullable<int> enrollId, Nullable<int> companyID)
    {

        var enrollIdParameter = enrollId.HasValue ?
            new ObjectParameter("EnrollId", enrollId) :
            new ObjectParameter("EnrollId", typeof(int));


        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getapproveleavefrom_Result>("sp_getapproveleavefrom", enrollIdParameter, companyIDParameter);
    }


    public virtual ObjectResult<Sp_GetAttendanceState_Result> Sp_GetAttendanceState()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetAttendanceState_Result>("Sp_GetAttendanceState");
    }


    public virtual ObjectResult<SP_GETDEPARTMENT_Result> SP_GETDEPARTMENT(Nullable<int> companyID)
    {

        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GETDEPARTMENT_Result>("SP_GETDEPARTMENT", companyIDParameter);
    }


    public virtual ObjectResult<Sp_GetElgyears_Result> Sp_GetElgyears()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetElgyears_Result>("Sp_GetElgyears");
    }


    public virtual ObjectResult<sp_GetMenuByUserNew1_Result> sp_GetMenuByUserNew1(Nullable<int> moduleId, Nullable<int> roleId)
    {

        var moduleIdParameter = moduleId.HasValue ?
            new ObjectParameter("ModuleId", moduleId) :
            new ObjectParameter("ModuleId", typeof(int));


        var roleIdParameter = roleId.HasValue ?
            new ObjectParameter("RoleId", roleId) :
            new ObjectParameter("RoleId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetMenuByUserNew1_Result>("sp_GetMenuByUserNew1", moduleIdParameter, roleIdParameter);
    }


    public virtual ObjectResult<sp_GetPagePermissionByRole_Result> sp_GetPagePermissionByRole(Nullable<int> roleID)
    {

        var roleIDParameter = roleID.HasValue ?
            new ObjectParameter("RoleID", roleID) :
            new ObjectParameter("RoleID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetPagePermissionByRole_Result>("sp_GetPagePermissionByRole", roleIDParameter);
    }


    public virtual ObjectResult<Nullable<decimal>> sp_GetRemainingLoanAmountByEmpID(Nullable<int> empID, Nullable<int> companyID)
    {

        var empIDParameter = empID.HasValue ?
            new ObjectParameter("EmpID", empID) :
            new ObjectParameter("EmpID", typeof(int));


        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("sp_GetRemainingLoanAmountByEmpID", empIDParameter, companyIDParameter);
    }


    public virtual ObjectResult<Sp_GetResignationApplyEmployeeByCompanyID_Result> Sp_GetResignationApplyEmployeeByCompanyID(Nullable<int> companyID)
    {

        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetResignationApplyEmployeeByCompanyID_Result>("Sp_GetResignationApplyEmployeeByCompanyID", companyIDParameter);
    }


    public virtual ObjectResult<Sp_GetResignedEmployee_Result> Sp_GetResignedEmployee(Nullable<int> emp)
    {

        var empParameter = emp.HasValue ?
            new ObjectParameter("emp", emp) :
            new ObjectParameter("emp", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetResignedEmployee_Result>("Sp_GetResignedEmployee", empParameter);
    }


    public virtual ObjectResult<Sp_GetResignedEmployeeByCompanyID_Result> Sp_GetResignedEmployeeByCompanyID(Nullable<int> companyID)
    {

        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetResignedEmployeeByCompanyID_Result>("Sp_GetResignedEmployeeByCompanyID", companyIDParameter);
    }


    public virtual ObjectResult<SP_GetSalaryCustom_Result> SP_GetSalaryCustom(Nullable<System.DateTime> currentMonthDate, Nullable<int> companyID, Nullable<int> employeeId)
    {

        var currentMonthDateParameter = currentMonthDate.HasValue ?
            new ObjectParameter("currentMonthDate", currentMonthDate) :
            new ObjectParameter("currentMonthDate", typeof(System.DateTime));


        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        var employeeIdParameter = employeeId.HasValue ?
            new ObjectParameter("EmployeeId", employeeId) :
            new ObjectParameter("EmployeeId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetSalaryCustom_Result>("SP_GetSalaryCustom", currentMonthDateParameter, companyIDParameter, employeeIdParameter);
    }


    public virtual ObjectResult<Sp_GetTerminatedEmployeeByCompanyID_Result> Sp_GetTerminatedEmployeeByCompanyID(Nullable<int> companyID)
    {

        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetTerminatedEmployeeByCompanyID_Result>("Sp_GetTerminatedEmployeeByCompanyID", companyIDParameter);
    }


    public virtual int Sp_InactiveEmployee(Nullable<int> employeeId, Nullable<bool> isactive)
    {

        var employeeIdParameter = employeeId.HasValue ?
            new ObjectParameter("EmployeeId", employeeId) :
            new ObjectParameter("EmployeeId", typeof(int));


        var isactiveParameter = isactive.HasValue ?
            new ObjectParameter("isactive", isactive) :
            new ObjectParameter("isactive", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_InactiveEmployee", employeeIdParameter, isactiveParameter);
    }


    public virtual ObjectResult<sp_InsertAttendanceFromTempTable_Result> sp_InsertAttendanceFromTempTable()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_InsertAttendanceFromTempTable_Result>("sp_InsertAttendanceFromTempTable");
    }


    public virtual ObjectResult<sp_searchbydropdown_Result> sp_searchbydropdown(Nullable<int> enrollId, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> companyID)
    {

        var enrollIdParameter = enrollId.HasValue ?
            new ObjectParameter("EnrollId", enrollId) :
            new ObjectParameter("EnrollId", typeof(int));


        var startDateParameter = startDate.HasValue ?
            new ObjectParameter("StartDate", startDate) :
            new ObjectParameter("StartDate", typeof(System.DateTime));


        var endDateParameter = endDate.HasValue ?
            new ObjectParameter("EndDate", endDate) :
            new ObjectParameter("EndDate", typeof(System.DateTime));


        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_searchbydropdown_Result>("sp_searchbydropdown", enrollIdParameter, startDateParameter, endDateParameter, companyIDParameter);
    }


    public virtual int SP_UpdateEmployees()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UpdateEmployees");
    }


    public virtual ObjectResult<Sp_UserbyCompanyIDandUserId_Result> Sp_UserbyCompanyIDandUserId(Nullable<int> companyID, Nullable<int> userID)
    {

        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        var userIDParameter = userID.HasValue ?
            new ObjectParameter("UserID", userID) :
            new ObjectParameter("UserID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_UserbyCompanyIDandUserId_Result>("Sp_UserbyCompanyIDandUserId", companyIDParameter, userIDParameter);
    }


    public virtual ObjectResult<vt_AttendanceAdd_Result> vt_AttendanceAdd()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<vt_AttendanceAdd_Result>("vt_AttendanceAdd");
    }


    public virtual ObjectResult<VT_SP_BindDepart_Result> VT_SP_BindDepart(Nullable<int> companyID)
    {

        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VT_SP_BindDepart_Result>("VT_SP_BindDepart", companyIDParameter);
    }


    public virtual ObjectResult<VT_SP_BindDes_Result> VT_SP_BindDes(Nullable<int> companyID)
    {

        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VT_SP_BindDes_Result>("VT_SP_BindDes", companyIDParameter);
    }


    public virtual ObjectResult<VT_SP_BindDesigByDepID_Result> VT_SP_BindDesigByDepID(Nullable<int> depID)
    {

        var depIDParameter = depID.HasValue ?
            new ObjectParameter("DepID", depID) :
            new ObjectParameter("DepID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VT_SP_BindDesigByDepID_Result>("VT_SP_BindDesigByDepID", depIDParameter);
    }


    public virtual ObjectResult<vt_sp_BindDesignation_byCompanyID_Result> vt_sp_BindDesignation_byCompanyID(Nullable<int> companyID)
    {

        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<vt_sp_BindDesignation_byCompanyID_Result>("vt_sp_BindDesignation_byCompanyID", companyIDParameter);
    }


    public virtual ObjectResult<VT_SP_BindHRAdmin_Result> VT_SP_BindHRAdmin(Nullable<int> roleId, Nullable<int> companyId)
    {

        var roleIdParameter = roleId.HasValue ?
            new ObjectParameter("RoleId", roleId) :
            new ObjectParameter("RoleId", typeof(int));


        var companyIdParameter = companyId.HasValue ?
            new ObjectParameter("CompanyId", companyId) :
            new ObjectParameter("CompanyId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VT_SP_BindHRAdmin_Result>("VT_SP_BindHRAdmin", roleIdParameter, companyIdParameter);
    }


    public virtual ObjectResult<vt_Sp_BindLoanEntryLog_Result> vt_Sp_BindLoanEntryLog()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<vt_Sp_BindLoanEntryLog_Result>("vt_Sp_BindLoanEntryLog");
    }


    public virtual int vt_sp_deletedesignationById(Nullable<int> designationID, Nullable<int> companyID)
    {

        var designationIDParameter = designationID.HasValue ?
            new ObjectParameter("DesignationID", designationID) :
            new ObjectParameter("DesignationID", typeof(int));


        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("vt_sp_deletedesignationById", designationIDParameter, companyIDParameter);
    }


    public virtual ObjectResult<vt_sp_DepartmentWieSummarySheet_Result> vt_sp_DepartmentWieSummarySheet(Nullable<int> companyid, Nullable<System.DateTime> monthWise)
    {

        var companyidParameter = companyid.HasValue ?
            new ObjectParameter("Companyid", companyid) :
            new ObjectParameter("Companyid", typeof(int));


        var monthWiseParameter = monthWise.HasValue ?
            new ObjectParameter("MonthWise", monthWise) :
            new ObjectParameter("MonthWise", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<vt_sp_DepartmentWieSummarySheet_Result>("vt_sp_DepartmentWieSummarySheet", companyidParameter, monthWiseParameter);
    }


    public virtual ObjectResult<vt_sp_DepartmentyearlyWieSummarySheet_Result> vt_sp_DepartmentyearlyWieSummarySheet(Nullable<int> companyid, Nullable<int> employeeID, Nullable<int> year)
    {

        var companyidParameter = companyid.HasValue ?
            new ObjectParameter("Companyid", companyid) :
            new ObjectParameter("Companyid", typeof(int));


        var employeeIDParameter = employeeID.HasValue ?
            new ObjectParameter("EmployeeID", employeeID) :
            new ObjectParameter("EmployeeID", typeof(int));


        var yearParameter = year.HasValue ?
            new ObjectParameter("year", year) :
            new ObjectParameter("year", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<vt_sp_DepartmentyearlyWieSummarySheet_Result>("vt_sp_DepartmentyearlyWieSummarySheet", companyidParameter, employeeIDParameter, yearParameter);
    }


    public virtual ObjectResult<Vt_Sp_Employee_PreviousJobInfo_Result> Vt_Sp_Employee_PreviousJobInfo(Nullable<int> employeeID)
    {

        var employeeIDParameter = employeeID.HasValue ?
            new ObjectParameter("EmployeeID", employeeID) :
            new ObjectParameter("EmployeeID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Vt_Sp_Employee_PreviousJobInfo_Result>("Vt_Sp_Employee_PreviousJobInfo", employeeIDParameter);
    }


    public virtual ObjectResult<Vt_Sp_Employee_Qualifications1_Result> Vt_Sp_Employee_Qualifications1(Nullable<int> employeeID, Nullable<int> qualificationType)
    {

        var employeeIDParameter = employeeID.HasValue ?
            new ObjectParameter("EmployeeID", employeeID) :
            new ObjectParameter("EmployeeID", typeof(int));


        var qualificationTypeParameter = qualificationType.HasValue ?
            new ObjectParameter("QualificationType", qualificationType) :
            new ObjectParameter("QualificationType", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Vt_Sp_Employee_Qualifications1_Result>("Vt_Sp_Employee_Qualifications1", employeeIDParameter, qualificationTypeParameter);
    }


    public virtual ObjectResult<VT_SP_GetAppliedLeaveApplications_Result> VT_SP_GetAppliedLeaveApplications(Nullable<int> companyID)
    {

        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VT_SP_GetAppliedLeaveApplications_Result>("VT_SP_GetAppliedLeaveApplications", companyIDParameter);
    }


    public virtual ObjectResult<Vt_Sp_GetAttendance_Result> Vt_Sp_GetAttendance(Nullable<int> employeeID)
    {

        var employeeIDParameter = employeeID.HasValue ?
            new ObjectParameter("EmployeeID", employeeID) :
            new ObjectParameter("EmployeeID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Vt_Sp_GetAttendance_Result>("Vt_Sp_GetAttendance", employeeIDParameter);
    }


    public virtual ObjectResult<Vt_Sp_GetCoreManagement_Result> Vt_Sp_GetCoreManagement(Nullable<int> companyID)
    {

        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Vt_Sp_GetCoreManagement_Result>("Vt_Sp_GetCoreManagement", companyIDParameter);
    }


    public virtual ObjectResult<VT_SP_GetDeactiveEmployees_Result> VT_SP_GetDeactiveEmployees(Nullable<int> companyID)
    {

        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VT_SP_GetDeactiveEmployees_Result>("VT_SP_GetDeactiveEmployees", companyIDParameter);
    }


    public virtual ObjectResult<vt_Sp_GetEmpByComID_Result> vt_Sp_GetEmpByComID(Nullable<int> companyId)
    {

        var companyIdParameter = companyId.HasValue ?
            new ObjectParameter("CompanyId", companyId) :
            new ObjectParameter("CompanyId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<vt_Sp_GetEmpByComID_Result>("vt_Sp_GetEmpByComID", companyIdParameter);
    }


    public virtual ObjectResult<VT_SP_GetEmployee_ByID_Result> VT_SP_GetEmployee_ByID(Nullable<int> employeeId)
    {

        var employeeIdParameter = employeeId.HasValue ?
            new ObjectParameter("EmployeeId", employeeId) :
            new ObjectParameter("EmployeeId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VT_SP_GetEmployee_ByID_Result>("VT_SP_GetEmployee_ByID", employeeIdParameter);
    }


    public virtual ObjectResult<VT_SP_GetEmployeesbydepartmentid_Result> VT_SP_GetEmployeesbydepartmentid(Nullable<int> companyID, Nullable<int> departmentID)
    {

        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        var departmentIDParameter = departmentID.HasValue ?
            new ObjectParameter("DepartmentID", departmentID) :
            new ObjectParameter("DepartmentID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VT_SP_GetEmployeesbydepartmentid_Result>("VT_SP_GetEmployeesbydepartmentid", companyIDParameter, departmentIDParameter);
    }


    public virtual ObjectResult<VT_SP_GetEmpSalaries6Feb2019_Result> VT_SP_GetEmpSalaries6Feb2019(Nullable<System.DateTime> currentMonthDate, Nullable<int> companyID)
    {

        var currentMonthDateParameter = currentMonthDate.HasValue ?
            new ObjectParameter("currentMonthDate", currentMonthDate) :
            new ObjectParameter("currentMonthDate", typeof(System.DateTime));


        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VT_SP_GetEmpSalaries6Feb2019_Result>("VT_SP_GetEmpSalaries6Feb2019", currentMonthDateParameter, companyIDParameter);
    }


    public virtual int vt_sp_getmaxencashmentleaves(Nullable<int> designationID, Nullable<int> companyID)
    {

        var designationIDParameter = designationID.HasValue ?
            new ObjectParameter("DesignationID", designationID) :
            new ObjectParameter("DesignationID", typeof(int));


        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("vt_sp_getmaxencashmentleaves", designationIDParameter, companyIDParameter);
    }


    public virtual ObjectResult<string> VT_SP_GetTimeOUt(string currentMonthDate, Nullable<int> companyid)
    {

        var currentMonthDateParameter = currentMonthDate != null ?
            new ObjectParameter("currentMonthDate", currentMonthDate) :
            new ObjectParameter("currentMonthDate", typeof(string));


        var companyidParameter = companyid.HasValue ?
            new ObjectParameter("Companyid", companyid) :
            new ObjectParameter("Companyid", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("VT_SP_GetTimeOUt", currentMonthDateParameter, companyidParameter);
    }


    public virtual ObjectResult<vt_sp_gettopdesignation_Result> vt_sp_gettopdesignation()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<vt_sp_gettopdesignation_Result>("vt_sp_gettopdesignation");
    }


    public virtual ObjectResult<Vt_Sp_SalaryNotification_Result> Vt_Sp_SalaryNotification(Nullable<int> employeeID, Nullable<int> month, Nullable<int> year)
    {

        var employeeIDParameter = employeeID.HasValue ?
            new ObjectParameter("EmployeeID", employeeID) :
            new ObjectParameter("EmployeeID", typeof(int));


        var monthParameter = month.HasValue ?
            new ObjectParameter("Month", month) :
            new ObjectParameter("Month", typeof(int));


        var yearParameter = year.HasValue ?
            new ObjectParameter("Year", year) :
            new ObjectParameter("Year", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Vt_Sp_SalaryNotification_Result>("Vt_Sp_SalaryNotification", employeeIDParameter, monthParameter, yearParameter);
    }


    public virtual ObjectResult<string> VT_SP_SetEmpSalaries1(Nullable<System.DateTime> currentMonthDate, Nullable<int> companyID, Nullable<int> createdBy, Nullable<System.DateTime> createdDate)
    {

        var currentMonthDateParameter = currentMonthDate.HasValue ?
            new ObjectParameter("currentMonthDate", currentMonthDate) :
            new ObjectParameter("currentMonthDate", typeof(System.DateTime));


        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        var createdByParameter = createdBy.HasValue ?
            new ObjectParameter("CreatedBy", createdBy) :
            new ObjectParameter("CreatedBy", typeof(int));


        var createdDateParameter = createdDate.HasValue ?
            new ObjectParameter("CreatedDate", createdDate) :
            new ObjectParameter("CreatedDate", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("VT_SP_SetEmpSalaries1", currentMonthDateParameter, companyIDParameter, createdByParameter, createdDateParameter);
    }


    public virtual ObjectResult<string> VT_SP_SetEmpSalaries8Feb2019(Nullable<System.DateTime> currentMonthDate, Nullable<int> companyID, Nullable<int> createdBy, Nullable<System.DateTime> createdDate)
    {

        var currentMonthDateParameter = currentMonthDate.HasValue ?
            new ObjectParameter("currentMonthDate", currentMonthDate) :
            new ObjectParameter("currentMonthDate", typeof(System.DateTime));


        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        var createdByParameter = createdBy.HasValue ?
            new ObjectParameter("CreatedBy", createdBy) :
            new ObjectParameter("CreatedBy", typeof(int));


        var createdDateParameter = createdDate.HasValue ?
            new ObjectParameter("CreatedDate", createdDate) :
            new ObjectParameter("CreatedDate", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("VT_SP_SetEmpSalaries8Feb2019", currentMonthDateParameter, companyIDParameter, createdByParameter, createdDateParameter);
    }


    public virtual int Vt_Sp_SingleValue(string tableName, string columnTitle, string iDTitle, string iD)
    {

        var tableNameParameter = tableName != null ?
            new ObjectParameter("TableName", tableName) :
            new ObjectParameter("TableName", typeof(string));


        var columnTitleParameter = columnTitle != null ?
            new ObjectParameter("ColumnTitle", columnTitle) :
            new ObjectParameter("ColumnTitle", typeof(string));


        var iDTitleParameter = iDTitle != null ?
            new ObjectParameter("IDTitle", iDTitle) :
            new ObjectParameter("IDTitle", typeof(string));


        var iDParameter = iD != null ?
            new ObjectParameter("ID", iD) :
            new ObjectParameter("ID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Vt_Sp_SingleValue", tableNameParameter, columnTitleParameter, iDTitleParameter, iDParameter);
    }


    public virtual int VT_SP_UpdatePassword(string password, Nullable<long> userid)
    {

        var passwordParameter = password != null ?
            new ObjectParameter("Password", password) :
            new ObjectParameter("Password", typeof(string));


        var useridParameter = userid.HasValue ?
            new ObjectParameter("userid", userid) :
            new ObjectParameter("userid", typeof(long));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("VT_SP_UpdatePassword", passwordParameter, useridParameter);
    }


    public virtual ObjectResult<Sp_UserbyCompanyID_Result1> Sp_UserbyCompanyID(Nullable<int> companyID)
    {

        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_UserbyCompanyID_Result1>("Sp_UserbyCompanyID", companyIDParameter);
    }


    public virtual int InsertDataFromDynamicJsonByIndex(string jsonData, Nullable<int> index, string tempTableName)
    {

        var jsonDataParameter = jsonData != null ?
            new ObjectParameter("JsonData", jsonData) :
            new ObjectParameter("JsonData", typeof(string));


        var indexParameter = index.HasValue ?
            new ObjectParameter("Index", index) :
            new ObjectParameter("Index", typeof(int));


        var tempTableNameParameter = tempTableName != null ?
            new ObjectParameter("TempTableName", tempTableName) :
            new ObjectParameter("TempTableName", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertDataFromDynamicJsonByIndex", jsonDataParameter, indexParameter, tempTableNameParameter);
    }


    public virtual int InsertDataFromJsonByIndex(Nullable<int> index, string tempTableName, string jsonData)
    {

        var indexParameter = index.HasValue ?
            new ObjectParameter("Index", index) :
            new ObjectParameter("Index", typeof(int));


        var tempTableNameParameter = tempTableName != null ?
            new ObjectParameter("TempTableName", tempTableName) :
            new ObjectParameter("TempTableName", typeof(string));


        var jsonDataParameter = jsonData != null ?
            new ObjectParameter("JsonData", jsonData) :
            new ObjectParameter("JsonData", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertDataFromJsonByIndex", indexParameter, tempTableNameParameter, jsonDataParameter);
    }


    public virtual int ParseJsonData(string jsonData)
    {

        var jsonDataParameter = jsonData != null ?
            new ObjectParameter("JsonData", jsonData) :
            new ObjectParameter("JsonData", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ParseJsonData", jsonDataParameter);
    }


    public virtual int proc_checkuser(string employeecode, ObjectParameter userfullname, ObjectParameter userid, ObjectParameter employeeemail, ObjectParameter code, ObjectParameter message)
    {

        var employeecodeParameter = employeecode != null ?
            new ObjectParameter("employeecode", employeecode) :
            new ObjectParameter("employeecode", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_checkuser", employeecodeParameter, userfullname, userid, employeeemail, code, message);
    }


    public virtual int proc_JSONToTables(string theJSON)
    {

        var theJSONParameter = theJSON != null ?
            new ObjectParameter("TheJSON", theJSON) :
            new ObjectParameter("TheJSON", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_JSONToTables", theJSONParameter);
    }


    public virtual int proc_registeraccesstoken(Nullable<int> userid, string browserid, string accesstoken, string ipaddress, Nullable<System.DateTime> expirydate, string fcmtoken, string channel, string platform, string provider, string geolocation)
    {

        var useridParameter = userid.HasValue ?
            new ObjectParameter("userid", userid) :
            new ObjectParameter("userid", typeof(int));


        var browseridParameter = browserid != null ?
            new ObjectParameter("browserid", browserid) :
            new ObjectParameter("browserid", typeof(string));


        var accesstokenParameter = accesstoken != null ?
            new ObjectParameter("accesstoken", accesstoken) :
            new ObjectParameter("accesstoken", typeof(string));


        var ipaddressParameter = ipaddress != null ?
            new ObjectParameter("ipaddress", ipaddress) :
            new ObjectParameter("ipaddress", typeof(string));


        var expirydateParameter = expirydate.HasValue ?
            new ObjectParameter("expirydate", expirydate) :
            new ObjectParameter("expirydate", typeof(System.DateTime));


        var fcmtokenParameter = fcmtoken != null ?
            new ObjectParameter("fcmtoken", fcmtoken) :
            new ObjectParameter("fcmtoken", typeof(string));


        var channelParameter = channel != null ?
            new ObjectParameter("channel", channel) :
            new ObjectParameter("channel", typeof(string));


        var platformParameter = platform != null ?
            new ObjectParameter("platform", platform) :
            new ObjectParameter("platform", typeof(string));


        var providerParameter = provider != null ?
            new ObjectParameter("provider", provider) :
            new ObjectParameter("provider", typeof(string));


        var geolocationParameter = geolocation != null ?
            new ObjectParameter("geolocation", geolocation) :
            new ObjectParameter("geolocation", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_registeraccesstoken", useridParameter, browseridParameter, accesstokenParameter, ipaddressParameter, expirydateParameter, fcmtokenParameter, channelParameter, platformParameter, providerParameter, geolocationParameter);
    }


    public virtual int proc_resetpassword(string employeecode, string otp, string password, ObjectParameter code, ObjectParameter message)
    {

        var employeecodeParameter = employeecode != null ?
            new ObjectParameter("employeecode", employeecode) :
            new ObjectParameter("employeecode", typeof(string));


        var otpParameter = otp != null ?
            new ObjectParameter("otp", otp) :
            new ObjectParameter("otp", typeof(string));


        var passwordParameter = password != null ?
            new ObjectParameter("password", password) :
            new ObjectParameter("password", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_resetpassword", employeecodeParameter, otpParameter, passwordParameter, code, message);
    }


    public virtual ObjectResult<proc_UserLogin_Result> proc_UserLogin(string employeeEnrollId, string password, ObjectParameter code, ObjectParameter message)
    {

        var employeeEnrollIdParameter = employeeEnrollId != null ?
            new ObjectParameter("employeeEnrollId", employeeEnrollId) :
            new ObjectParameter("employeeEnrollId", typeof(string));


        var passwordParameter = password != null ?
            new ObjectParameter("password", password) :
            new ObjectParameter("password", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<proc_UserLogin_Result>("proc_UserLogin", employeeEnrollIdParameter, passwordParameter, code, message);
    }


    public virtual int proc_UserLogout(string accesstoken, ObjectParameter code, ObjectParameter message)
    {

        var accesstokenParameter = accesstoken != null ?
            new ObjectParameter("accesstoken", accesstoken) :
            new ObjectParameter("accesstoken", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_UserLogout", accesstokenParameter, code, message);
    }


    public virtual int proc_verificationlink_create(Nullable<int> type, string query, Nullable<System.DateTime> validtill, Nullable<long> userid, ObjectParameter id, ObjectParameter code, ObjectParameter message)
    {

        var typeParameter = type.HasValue ?
            new ObjectParameter("type", type) :
            new ObjectParameter("type", typeof(int));


        var queryParameter = query != null ?
            new ObjectParameter("query", query) :
            new ObjectParameter("query", typeof(string));


        var validtillParameter = validtill.HasValue ?
            new ObjectParameter("validtill", validtill) :
            new ObjectParameter("validtill", typeof(System.DateTime));


        var useridParameter = userid.HasValue ?
            new ObjectParameter("userid", userid) :
            new ObjectParameter("userid", typeof(long));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_verificationlink_create", typeParameter, queryParameter, validtillParameter, useridParameter, id, code, message);
    }


    public virtual int proc_verifyotp(string employeecode, string otp, Nullable<int> type, ObjectParameter code, ObjectParameter message)
    {

        var employeecodeParameter = employeecode != null ?
            new ObjectParameter("employeecode", employeecode) :
            new ObjectParameter("employeecode", typeof(string));


        var otpParameter = otp != null ?
            new ObjectParameter("otp", otp) :
            new ObjectParameter("otp", typeof(string));


        var typeParameter = type.HasValue ?
            new ObjectParameter("type", type) :
            new ObjectParameter("type", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proc_verifyotp", employeecodeParameter, otpParameter, typeParameter, code, message);
    }


    public virtual ObjectResult<Sp_Get_Empbyid_Result> Sp_Get_Empbyid(Nullable<int> companyid, Nullable<int> employeeid, ObjectParameter code, ObjectParameter messages)
    {

        var companyidParameter = companyid.HasValue ?
            new ObjectParameter("companyid", companyid) :
            new ObjectParameter("companyid", typeof(int));


        var employeeidParameter = employeeid.HasValue ?
            new ObjectParameter("Employeeid", employeeid) :
            new ObjectParameter("Employeeid", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Empbyid_Result>("Sp_Get_Empbyid", companyidParameter, employeeidParameter, code, messages);
    }


    public virtual ObjectResult<Sp_Get_Upcoming_Birthdayid_Result> Sp_Get_Upcoming_Birthdayid(Nullable<int> companyid, Nullable<int> employeeID, string filters, ObjectParameter code, ObjectParameter messages)
    {

        var companyidParameter = companyid.HasValue ?
            new ObjectParameter("companyid", companyid) :
            new ObjectParameter("companyid", typeof(int));


        var employeeIDParameter = employeeID.HasValue ?
            new ObjectParameter("EmployeeID", employeeID) :
            new ObjectParameter("EmployeeID", typeof(int));


        var filtersParameter = filters != null ?
            new ObjectParameter("filters", filters) :
            new ObjectParameter("filters", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Upcoming_Birthdayid_Result>("Sp_Get_Upcoming_Birthdayid", companyidParameter, employeeIDParameter, filtersParameter, code, messages);
    }


    public virtual ObjectResult<sp_get_user_Result> sp_get_user(Nullable<int> companyid, Nullable<int> employeeID, string filters, ObjectParameter code, ObjectParameter messages)
    {

        var companyidParameter = companyid.HasValue ?
            new ObjectParameter("companyid", companyid) :
            new ObjectParameter("companyid", typeof(int));


        var employeeIDParameter = employeeID.HasValue ?
            new ObjectParameter("EmployeeID", employeeID) :
            new ObjectParameter("EmployeeID", typeof(int));


        var filtersParameter = filters != null ?
            new ObjectParameter("filters", filters) :
            new ObjectParameter("filters", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_user_Result>("sp_get_user", companyidParameter, employeeIDParameter, filtersParameter, code, messages);
    }


    public virtual ObjectResult<SP_GetDeletedEmp_Result> SP_GetDeletedEmp(Nullable<int> companyID)
    {

        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetDeletedEmp_Result>("SP_GetDeletedEmp", companyIDParameter);
    }


    public virtual int sp_DeleteEmpDocumentbyid(Nullable<int> id)
    {

        var idParameter = id.HasValue ?
            new ObjectParameter("Id", id) :
            new ObjectParameter("Id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DeleteEmpDocumentbyid", idParameter);
    }


    public virtual ObjectResult<vt_sp_GetEmptranferrecord_Result1> vt_sp_GetEmptranferrecord(Nullable<int> employeeID)
    {

        var employeeIDParameter = employeeID.HasValue ?
            new ObjectParameter("EmployeeID", employeeID) :
            new ObjectParameter("EmployeeID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<vt_sp_GetEmptranferrecord_Result1>("vt_sp_GetEmptranferrecord", employeeIDParameter);
    }


    public virtual ObjectResult<Sp_Get_Employee_JobLog_Result> Sp_Get_Employee_JobLog(Nullable<int> employeeID)
    {

        var employeeIDParameter = employeeID.HasValue ?
            new ObjectParameter("EmployeeID", employeeID) :
            new ObjectParameter("EmployeeID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Get_Employee_JobLog_Result>("Sp_Get_Employee_JobLog", employeeIDParameter);
    }


    public virtual ObjectResult<VT_SP_GetHolidays_Result1> VT_SP_GetHolidays(Nullable<int> companyID)
    {

        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VT_SP_GetHolidays_Result1>("VT_SP_GetHolidays", companyIDParameter);
    }


    public virtual ObjectResult<VT_SP_GetLeaves_Result2> VT_SP_GetLeaves(Nullable<int> companyID, Nullable<long> employeeID)
    {

        var companyIDParameter = companyID.HasValue ?
            new ObjectParameter("CompanyID", companyID) :
            new ObjectParameter("CompanyID", typeof(int));


        var employeeIDParameter = employeeID.HasValue ?
            new ObjectParameter("EmployeeID", employeeID) :
            new ObjectParameter("EmployeeID", typeof(long));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VT_SP_GetLeaves_Result2>("VT_SP_GetLeaves", companyIDParameter, employeeIDParameter);
    }

}

